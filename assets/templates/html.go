// Code generated by go-bindata.
// sources:
// templates/html/common_footer.html
// templates/html/common_header.html
// templates/html/confirm.html
// templates/html/confirm_action.html
// templates/html/confirm_email.html
// templates/html/confirm_success.html
// templates/html/index.html
// templates/html/subscribe.html
// templates/html/subscribe_success.html
// templates/html/unsubscribe.html
// templates/html/unsubscribe_success.html
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesHtmlCommon_footerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xce\xcf\xcd\xcd\xcf\x8b\x4f\xcb\xcf\x2f\x49\x2d\x52\xaa\xad\xe5\xe2\xe4\xb4\xd1\x4f\xc9\x2c\xb3\xe3\xe2\xb4\xd1\x4f\xca\x4f\xa9\xb4\xe3\xb2\xd1\xcf\x28\xc9\xcd\xb1\xe3\xaa\xae\x4e\xcd\x4b\xa9\xad\xe5\x02\x04\x00\x00\xff\xff\x51\x34\x73\xde\x3d\x00\x00\x00")

func templatesHtmlCommon_footerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlCommon_footerHtml,
		"templates/html/common_footer.html",
	)
}

func templatesHtmlCommon_footerHtml() (*asset, error) {
	bytes, err := templatesHtmlCommon_footerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/common_footer.html", size: 61, mode: os.FileMode(420), modTime: time.Unix(1568293556, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlCommon_headerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xb1\x52\xc3\x30\x0c\x86\xe7\xe4\x29\x84\x67\xdc\x1c\x1b\x83\x9d\x05\x18\x58\xa0\x77\xb0\x30\x71\x8a\xad\x36\xba\x4b\x9c\xe0\xa8\x69\xb9\x9c\xdf\x9d\x6b\x13\xa0\x85\x49\xb6\xfc\x5b\xdf\xa7\x69\xf2\xb4\xe1\x40\xa0\x5c\xd7\xb6\x5d\x78\xaf\x09\x3d\x45\x95\x92\xb9\xba\x7f\xbe\x7b\x7d\x5b\x3f\x40\x2d\x6d\x53\xe6\x66\x2e\x99\x39\x26\xca\x3c\xcb\x4c\x4b\x82\xe0\x6a\x8c\x03\x89\x55\x3b\xd9\xe8\x5b\x05\xc5\xef\x53\x2d\xd2\x6b\xfa\xd8\xf1\x68\xd5\x41\xef\x50\xbb\xae\xed\x51\xb8\x6a\x48\x81\xeb\x82\x50\x10\xab\x98\x2c\xf9\x2d\x5d\xfc\x0c\xd8\x92\x55\x23\xd3\xbe\xef\xa2\x9c\x85\xf7\xec\xa5\xb6\x9e\x46\x76\xa4\x4f\x97\x6b\xe0\xc0\xc2\xd8\xe8\xc1\x61\x43\xf6\xe6\x7b\x90\xb0\x34\x54\x4e\x13\xac\x5e\x58\xe8\x09\x5b\x82\x94\x4c\x31\xb7\xff\x90\x3c\x0d\x2e\x72\x2f\xdc\x85\x33\xd8\x3c\xc9\x14\xcb\xc2\xa6\xea\xfc\x67\x99\xe7\x19\x00\x80\x09\x38\x82\x6b\x70\x18\xac\x0a\x38\x56\x18\x61\x2e\x9a\x0e\x3d\x06\xaf\x9b\xad\x3a\x51\xf0\x32\xa5\xab\x88\xc1\x2b\xa8\x23\x6d\xac\x3a\xda\xad\x51\xea\x61\xf5\x18\x3c\x1d\x20\x25\xf5\xdf\x18\xcb\x05\x59\x04\x1c\x97\xf3\xd2\xf1\xfc\x23\x71\xb4\x46\x0e\x14\x55\x99\x4f\x13\x05\x9f\x52\xfe\x15\x00\x00\xff\xff\xa7\x08\x14\x24\xdd\x01\x00\x00")

func templatesHtmlCommon_headerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlCommon_headerHtml,
		"templates/html/common_header.html",
	)
}

func templatesHtmlCommon_headerHtml() (*asset, error) {
	bytes, err := templatesHtmlCommon_headerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/common_header.html", size: 477, mode: os.FileMode(420), modTime: time.Unix(1568386756, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirmHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xcf\xaa\x9d\x30\x10\xc6\xd7\xe6\x29\x86\xd9\xab\x70\xd7\xd1\x4d\xe9\xae\xd0\xd2\xdb\x2e\xba\x2a\xd1\x8c\xd7\x40\x92\x91\x31\x5e\x38\x88\xef\x5e\x8c\x7a\x38\xe7\xd0\x4d\x18\xe6\xcf\xef\x1b\xbe\xcc\xba\x82\xa5\xc1\x45\x02\xec\x39\x0e\x4e\x02\x6e\x9b\x5a\xd7\x44\x61\xf2\x26\xe5\x74\x08\x1c\xff\x8e\x64\x2c\x09\x42\x05\xdb\xa6\x94\xb6\xee\x13\x7a\x6f\xe6\xb9\xc1\xde\x88\xc5\x56\x01\x00\xe8\xf1\xed\x31\x5b\x9e\x43\xed\x97\x03\x5d\x55\x95\xae\xc7\xb7\xb3\xf7\x05\x51\x76\x6c\x6f\xd8\x2a\x55\xac\x2b\xb8\x01\xaa\xaf\x22\x2c\x59\xad\x78\xec\x35\x9e\x24\x41\x7e\x4b\x6b\xe2\xc7\xbe\x94\xb0\xa7\xb3\x82\xad\x2a\x76\xfc\xba\x3e\x10\x0a\x5d\x5b\xf7\xd9\x66\x34\x45\x9b\x53\xaa\xd0\x03\x4b\xb8\xb0\x7b\x8c\x10\x28\x8d\x6c\x1b\xfc\xf1\xfd\xfd\x17\x82\xe9\x93\xe3\xd8\xe0\xce\xfa\xfd\xf3\x1b\x6c\xdb\x45\x7f\x5e\x69\x9f\x2d\x3f\x84\x97\xe9\xaa\x6b\x6f\x3a\xf2\x30\xb0\x34\x68\xac\x15\x9a\xe7\xbb\x0b\x66\x87\x42\xcf\x96\x74\x9d\xdb\xae\x19\x17\xa7\x25\x41\xba\x4d\xd4\xe0\x5e\xc6\x27\x7e\xcf\x31\x09\x7b\x84\x68\xc2\xbd\xc1\xd9\x2b\x9a\xbc\xe9\x69\x64\x6f\x49\x1a\xfc\xc3\x8b\x40\xff\x2a\x97\xcd\xbd\x9c\x50\x85\xee\x96\x94\x38\x9e\x82\xf3\xd2\x05\x97\xee\x92\x5d\x8a\xd0\xa5\x58\x4e\xe2\x82\x91\x1b\xb6\xef\xb9\xae\xeb\x63\xe8\x00\xd4\xfb\x62\xe7\x6f\x1e\xd8\xec\xcd\x19\xff\xef\x8a\x06\xe6\x44\x72\x9c\xd8\xf5\x13\xff\x02\x00\x00\xff\xff\x76\x7a\xba\xaf\x83\x02\x00\x00")

func templatesHtmlConfirmHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirmHtml,
		"templates/html/confirm.html",
	)
}

func templatesHtmlConfirmHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirmHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm.html", size: 643, mode: os.FileMode(420), modTime: time.Unix(1568298056, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirm_actionHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xcb\x8e\xd4\x30\x10\x3c\x27\x5f\xd1\xea\x7b\x26\xd2\x9e\x93\x91\x10\xe2\x86\x60\xc5\xc2\x79\xe5\xc4\x9d\x8d\x85\xed\x1e\x9c\xce\xc0\x28\xca\xbf\x23\x3b\x8f\x7d\x30\xa0\x95\x40\x5c\x46\x76\x3f\xaa\xda\xd5\x35\x99\x26\xd0\xd4\x19\x4f\x80\x2d\xfb\xce\x04\x77\xaf\x5a\x31\xec\x71\x9e\xf3\x69\x12\x72\x27\xab\x24\x65\x9d\x63\x7f\xdf\x93\xd2\x14\x10\x0e\x30\xcf\x79\x5e\x69\x73\x86\xd6\xaa\x61\xa8\xb1\x55\x41\xe3\x31\x07\x00\xa8\xfa\x9b\xa7\xd1\x62\x6d\x3a\xe6\xd9\x34\x81\xe9\x80\xbe\xc1\xe1\x4d\x62\x01\x1c\xc6\x66\x68\x83\x69\x08\x23\x62\x76\x6b\x49\x0d\x04\xeb\x2c\x20\xbd\x12\xb8\xf0\x08\xdf\xcd\xd0\x83\x30\xec\xe5\xf1\x22\x3d\x41\xd5\xb2\xa6\xe3\x34\xc1\xe1\xce\x08\x7d\x50\x8e\x60\x9e\xab\x32\x45\xc1\x29\x63\x8d\x7f\x00\x6b\x06\x59\x63\x69\x06\xb2\x03\xbd\x8a\x6e\xf4\x8f\x84\x5d\x60\xf7\x17\x94\x5e\x47\xc6\x24\x4f\xd9\xdf\x2c\x42\x2d\xd7\x17\x22\x16\x0d\xeb\x0b\x1e\xf3\x4d\xad\xc3\xbb\x10\x38\x24\xbd\xb3\xa7\xb5\xca\x52\x10\x48\xbf\x85\x56\xfe\x21\xae\x25\xb0\xa5\x35\x13\xe5\x8e\xf0\x71\xce\x1d\x21\xab\x4a\x6d\xce\x2f\x44\xc8\xb3\xaa\xe3\xe0\x36\xdc\x78\x46\x70\x24\x3d\xeb\x1a\x6f\x3f\xde\x7d\x46\x58\x3c\x51\x63\x04\xfb\xf2\xe9\x3d\xcc\xf3\x06\x5f\x19\x7f\x1a\x05\xe4\x72\xa2\x1a\x7b\xa3\x35\x79\x04\xaf\x1c\xd5\x18\x1f\x8f\x70\x56\x76\xa4\xa5\xf3\x2d\xeb\xc8\x88\x50\xc6\xd7\xfd\xf2\xf6\x71\x10\x76\x45\xcb\x5e\x02\x5b\xd8\xae\x3d\xb5\x5f\x1b\xfe\x11\xf9\xb2\x67\x64\x7b\xe6\x3a\x40\x91\x6a\x11\x8c\xae\x37\x6b\x3f\x0e\xb6\x5c\x13\xa4\x55\x0d\xd9\xdf\x40\xa4\x1c\x42\xc7\xe1\x79\xd3\xaa\xeb\x9f\xad\x9c\xaa\xfe\x83\x9f\xb7\x69\xf6\x7d\xbe\x8a\xf8\x1f\x39\x7b\x27\x5f\xec\x9d\x65\x55\x99\x44\xdb\xdc\xb1\xda\x2d\x9e\xb3\x35\xd4\x8c\x22\xec\xd7\x25\x0e\x63\xe3\x8c\xec\x2b\x6c\xc4\x43\x23\xbe\x38\x05\xe3\x54\xb8\xe0\xf1\x2e\xe5\xab\x72\x69\x5a\x91\xa2\x8d\xa3\x4b\xaf\xfc\xb3\x12\x5d\xaa\x59\xcf\xd7\x3e\x62\x1d\xb3\x50\x58\xbe\x70\x5b\xfb\xcf\x00\x00\x00\xff\xff\xb5\xbc\x5b\x5e\x09\x05\x00\x00")

func templatesHtmlConfirm_actionHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirm_actionHtml,
		"templates/html/confirm_action.html",
	)
}

func templatesHtmlConfirm_actionHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirm_actionHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm_action.html", size: 1289, mode: os.FileMode(420), modTime: time.Unix(1568729944, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirm_emailHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x4f\x6b\xdc\x30\x14\xc4\xef\xfb\x29\x86\xbd\xa4\x85\xb0\xb9\x07\xc7\x25\xe4\xd2\x42\x29\x25\x6d\xe9\xb1\x68\xa5\xb1\xfd\x58\x59\x72\x25\x79\xd3\xd4\xf8\xbb\x17\xd9\xfb\x2f\x65\x03\x61\x6f\xde\xe5\x69\xde\x6f\x46\xa3\x61\x80\x61\x25\x8e\x58\x6a\xef\x2a\x09\xed\x2f\xb6\x4a\xec\x12\xe3\xb8\x28\xba\xf2\x23\xad\xf5\xd7\xc5\x4d\x57\x2e\x16\xc3\x00\xa9\xc0\xdf\x58\xdd\xeb\x24\xde\x61\x19\xfb\x75\xd4\x41\xd6\xdc\x8f\xff\xe4\xd5\x96\x08\xd4\x94\x2d\x0d\x14\x9c\x4f\x52\x89\x56\xd3\x7c\x6a\x54\xc2\xb3\xef\xaf\x0c\xac\x6c\x88\xe4\x71\x50\xc8\x3f\x52\x43\x14\xda\x1b\x96\xc3\x80\xd5\x37\x49\xfc\xa2\x5a\x62\x1c\x8b\x9b\xe9\x5f\x64\x32\x71\x35\xac\xc4\xb4\xc2\x77\x8f\x1d\x73\x16\x0d\x7b\xad\x6e\xda\xd5\x59\xaa\x48\x6c\x25\x4a\x42\x6a\x24\xe2\x89\xeb\x4e\xd5\xbc\x9d\xcc\x0c\x03\x68\x23\x2f\xc5\xee\xdd\x11\xbc\x0a\xbe\xbd\x08\xbd\xed\x2c\x13\xa7\xa3\x07\xbd\x1d\x7c\xf0\x9a\x31\xbe\xc5\x84\x33\xe3\xb8\xc8\x1e\x8e\xdb\x7f\x3c\x7e\xc6\x38\xe6\xaf\xaf\x2a\x35\x71\xf5\xb0\x0b\xe9\x00\x33\x5f\x67\xd1\x95\xf7\xce\x80\x2e\x31\xcc\xe2\xbb\x34\x67\xd7\x79\xf2\xf6\x30\x79\x54\x7f\xf0\x86\x67\xa4\xe6\x08\x95\x8d\x3e\xd3\x6f\xc5\xd0\xcc\xa2\x8d\x72\xe6\x19\x56\xdc\x26\x07\x67\x3c\xd6\x3e\x35\x10\x07\x85\x28\xae\xb6\x84\xb6\xa2\x37\x27\xab\x14\x9a\xc0\xea\x6e\xb9\x4f\xf2\xd1\xfb\xf4\x8a\xa1\x0f\x19\xe2\xee\x04\x6b\x59\x5e\x72\xaa\xb8\x51\xe5\x9b\x3b\xfe\xa9\xca\x65\x80\x11\x93\x6b\x02\x15\x37\x67\x8a\x2c\xf1\xc5\x8d\xe3\xdd\x9a\x5a\xf5\x91\xd7\x88\xea\xf9\x1a\xd1\xb7\xf4\x8e\x73\x07\xa3\xd4\x8e\x06\x7d\x87\x3e\x27\x32\x97\x79\x7a\x85\x50\xc6\x04\xc6\xf8\x7e\xdf\x04\x23\x31\xb0\x56\x61\x97\x6d\xcb\x18\x55\xcd\xd5\x99\x4a\x9f\xa7\x3c\xd3\xdb\xd7\x49\x2b\x1f\xc0\x3f\x2a\xd7\xf4\x3f\xe2\x14\x24\x5f\xef\x4b\xbd\x0b\xe1\xa1\x9c\xc1\x13\xa1\x3a\x6f\x7d\x2d\x7f\x39\xed\xcd\x8f\x42\x9c\xf6\x6e\x4b\x27\x74\xfa\xc4\xa3\x33\xd9\xe2\xc9\xe7\xbf\x00\x00\x00\xff\xff\x44\xc6\x8f\x06\xc4\x04\x00\x00")

func templatesHtmlConfirm_emailHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirm_emailHtml,
		"templates/html/confirm_email.html",
	)
}

func templatesHtmlConfirm_emailHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirm_emailHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm_email.html", size: 1220, mode: os.FileMode(420), modTime: time.Unix(1568731001, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirm_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x6b\xdc\x30\x10\x3d\xaf\x7f\xc5\x43\x97\x5e\xba\x5e\xc8\xd9\x31\xf4\x50\x68\x2f\xa5\x10\x72\xe8\x29\x68\xa5\xf1\x5a\x54\x1f\x8e\x24\x6f\x09\xc6\xff\xbd\x48\xd6\x3a\x6e\x36\x69\x68\x2f\xb6\x34\x5f\x6f\xde\x9b\x41\xd3\x04\x49\x9d\xb2\x04\x26\x9c\xed\x94\x37\x0f\x61\x14\x82\x42\x60\xf3\x5c\x4d\x53\x24\x33\x68\x1e\xb3\xdb\x18\x67\x1f\x7a\xe2\x92\x3c\x43\x8d\x79\xae\xaa\x69\x82\xea\x50\x7f\xf6\xde\xf9\x6c\x68\xa4\x3a\x43\x68\x1e\xc2\x2d\x13\xdc\x4b\xd6\x56\x00\xd0\xf4\x37\x5b\xeb\xbe\x54\x69\xbf\x78\xf3\x11\xb1\x27\x4f\xf8\xc5\x03\x38\x06\xef\x8e\x9a\x0c\x84\x33\x83\xa6\xa8\xec\x09\x4f\x6e\xf4\xf0\xf4\x38\x52\x88\xcd\xa1\xbf\x29\x15\x5f\x00\xed\x8f\x4e\x3e\xb1\xb6\xda\x55\xbb\xad\x8b\x6b\xf2\x11\xf9\xbb\x97\xdc\x9e\x52\xeb\xde\x69\x2a\x9e\x94\x90\xaa\x4d\xd3\x86\xc4\xae\x39\x48\x75\x2e\x30\xcb\xb1\xfc\x12\x5f\xd2\x81\xfe\x87\x6a\xb5\x5b\xc4\xa2\x47\xd4\x9f\x44\x54\xce\x82\x85\xf1\x18\x84\x57\x47\x62\x19\xf7\x6e\xb9\x0e\xd9\x59\x14\xa0\x9c\x77\x01\xdd\xdd\xdb\xf0\x76\x90\x95\x29\x66\x69\xfb\x3d\x9d\xde\x96\xe9\x32\xff\x17\x3a\xad\x42\xfd\x9d\x43\x0a\xfa\x91\x26\xf6\x6a\x9f\x88\x2e\x8d\x1b\x8d\x70\x92\xda\xa4\xfa\x9d\x8a\xf4\x8d\x9b\xc4\xae\x39\x64\x2b\x0c\x57\x3a\x0d\x5e\xab\x10\xa1\xc2\x9a\x5c\xaf\x2d\xac\x72\x14\x34\xf4\xfc\x4c\x38\x12\x59\x8c\x76\x6d\x48\xa2\xf3\xce\xfc\x1b\x5e\x9d\x4b\x3e\x03\x65\x49\x8b\xed\xb2\x04\xef\x0f\xf2\x4a\xf4\xce\xb9\xb8\x2c\x41\x9e\xc9\xd0\x7e\xed\xd2\x5e\x43\x92\x50\x92\xd2\xf1\x83\x84\x56\x3f\xb3\x40\x1b\x0a\xcf\x0c\xfe\x10\x25\xa5\x0a\x6e\x21\x1d\x82\x43\xc3\xd1\x7b\xea\x6e\x59\xe2\xf7\x9d\xc7\x3e\xd4\xf7\x9b\x12\xf3\xcc\xda\x52\x46\x05\x0c\xfc\x44\xcd\x81\xb7\x75\x73\x18\xda\x95\xd3\xd5\xfa\x5c\x6d\xfd\xe2\x7c\xed\x45\x28\xdc\xf2\x73\x71\x89\xfb\x1d\x00\x00\xff\xff\xfc\xe7\xa2\x26\x57\x04\x00\x00")

func templatesHtmlConfirm_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirm_successHtml,
		"templates/html/confirm_success.html",
	)
}

func templatesHtmlConfirm_successHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirm_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm_success.html", size: 1111, mode: os.FileMode(420), modTime: time.Unix(1568594402, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x51\x0a\xc2\x30\x10\x44\xff\x73\x8a\x61\x0f\xd0\x5e\x60\xcd\x19\x04\xf1\x5b\xd2\x66\x4b\x03\x69\x22\x6d\x0a\xc2\x92\xbb\x4b\x14\x44\x51\xfc\xdb\x81\x9d\xc7\x1b\x55\x78\x99\x42\x12\x50\x48\x5e\x6e\x84\x5a\x8d\x2a\x8a\x2c\xd7\xe8\x8a\x80\xc6\xbc\x2c\x39\x5d\x66\x71\x5e\x56\x42\xd7\x1e\x0c\xef\xd1\x1a\x03\x00\x1c\x83\x65\x87\x79\x95\xe9\x40\xaa\xe8\x8e\xae\xcc\x5b\x77\xda\x87\x6d\x5c\xc3\x20\xa8\x95\xec\x2b\x71\xef\x2c\xf7\x31\xd8\x56\xfd\xd7\x3f\xa7\xed\x83\xf0\x96\xbf\x19\x86\xfb\x87\xcf\x2f\xef\x29\xe7\xd2\xbc\x9f\xb3\x24\xf9\x76\xdd\x03\x00\x00\xff\xff\x6c\x0e\x95\x18\xf6\x00\x00\x00")

func templatesHtmlIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlIndexHtml,
		"templates/html/index.html",
	)
}

func templatesHtmlIndexHtml() (*asset, error) {
	bytes, err := templatesHtmlIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/index.html", size: 246, mode: os.FileMode(420), modTime: time.Unix(1568298070, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlSubscribeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x41\x6f\x9c\x3c\x10\x86\xcf\xcb\xaf\x18\xf9\x92\xe4\xb0\x8b\x94\xb3\x97\x5b\xa4\xef\x93\xaa\x36\x6a\x1a\x45\x3d\x55\x06\x0f\x8b\x15\xdb\x83\x86\x61\x5b\x84\xf8\xef\x95\x81\xdd\x90\x26\x17\x04\xe3\x99\x87\x77\xec\x77\x3c\x8e\x60\xb1\x76\x11\x41\x75\x7d\xd9\x55\xec\x4a\x54\xd3\x94\x8d\xa3\x60\x68\xbd\x11\x04\x55\x51\x08\x14\x7f\x35\x68\x2c\xb2\x82\x03\x4c\x53\x96\x69\xeb\xce\x50\x79\xd3\x75\x47\x55\x19\xb6\xaa\xc8\x00\x00\x74\x73\xbf\x8d\xee\xd7\xa2\xe2\xe9\x02\x07\x21\x90\x06\x41\x57\x64\xb1\x18\x47\x38\x3c\x39\xc1\xaf\x26\x20\x4c\x93\xce\xe7\x28\x04\xe3\xbc\x8b\x27\xf0\xae\x13\x9d\x37\xf7\x2b\xfb\x9f\x5f\xee\x4b\xb2\x83\x2a\xb2\x6c\x37\x8e\xe0\x6a\x38\x3c\x30\x13\xcf\xea\x76\xdb\x5c\xe3\x91\x05\xe6\xe7\xde\x9a\x78\x4a\x4d\x30\x79\x5c\x57\x54\x91\xed\x12\x3e\x69\xb9\x12\x76\x3a\xb7\xee\x5c\xcc\x68\x8c\x76\x0e\x65\x3b\x5d\x13\x87\x0b\x36\xbd\x2b\x08\x28\x0d\xd9\xa3\x7a\xfc\xf6\xf4\x43\x81\xa9\xc4\x51\x3c\xaa\xc4\x7a\xfe\xfe\x05\xa6\xe9\x42\x7f\x2f\x29\xd5\xee\x4f\x4c\x7d\x7b\x59\xd7\xde\x94\xe8\xa1\x26\x3e\x2a\x63\x2d\x63\xd7\xa9\xe2\x21\x6d\x04\xac\x9f\x3a\x9f\x53\x2e\xf9\x2e\xb6\xbd\x80\x0c\x2d\x1e\x15\xa6\x3c\xf5\x0e\x5e\x51\x14\x26\xaf\x20\x9a\x80\x6f\x48\x70\x76\xf3\x61\xd8\x99\xbd\xc5\xe5\x64\x6c\x39\xac\xa4\xff\xd0\xb7\x0a\x5a\x6f\x2a\x6c\xc8\x5b\xe4\xa3\xfa\x49\x3d\x03\x6e\xe5\x5c\x85\x77\xc1\x78\x3f\x73\x37\xc5\x5b\x29\x82\x7f\x04\xd2\x63\x1f\x7a\x41\xab\x8a\x17\x84\x88\x68\x61\xf8\x00\x4d\xee\xe8\xd2\x7e\x0f\xd4\x2f\x2b\x07\x78\x41\xb0\x14\x6f\x64\xa9\xb9\x25\x86\xdf\x26\xca\xdd\x67\xd5\x35\x31\x98\x38\x48\x93\xcc\x83\xbe\x43\xb8\xf5\xee\x15\xe1\xe4\xce\x29\xe2\x24\xf1\x0d\x48\xe3\xd8\x42\x6b\x58\x86\xbb\x83\xce\xe7\x06\x8a\xb7\x23\xcf\x76\xba\xec\x45\x28\xae\xbb\xdb\xf5\x65\x70\x72\xed\xa9\x94\x08\xa5\xc4\x7d\xcb\x2e\x18\x1e\x66\x6f\x07\x27\x3a\x5f\x8a\x16\x40\x9e\x3a\x5f\x6d\xbb\x60\x67\x13\x7c\x6a\xe3\x9a\x48\xd2\x8c\x64\x3b\xdd\x16\xff\xd7\xa9\xb1\x1b\x46\xf0\x44\xaf\x49\xb5\x10\x68\x0c\x45\x1f\xaf\x03\xaa\x73\x0c\x05\xd4\x4c\x61\x1e\xa5\xed\xb4\xa4\x40\x04\x6d\xa0\x61\xac\x17\x1f\x3e\x1a\x69\xba\xc3\xf3\x5b\xf9\xec\xca\x34\x98\x40\x11\xe8\x8c\x0c\x0d\x32\xea\xdc\x14\x07\x9d\xb7\x1f\x45\xaf\xef\x9f\xdd\x09\xab\xf4\xf9\xc2\xb8\xcc\xc9\xdf\x00\x00\x00\xff\xff\xfb\x01\x07\xd5\x53\x04\x00\x00")

func templatesHtmlSubscribeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlSubscribeHtml,
		"templates/html/subscribe.html",
	)
}

func templatesHtmlSubscribeHtml() (*asset, error) {
	bytes, err := templatesHtmlSubscribeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/subscribe.html", size: 1107, mode: os.FileMode(420), modTime: time.Unix(1568386892, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlSubscribe_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xc1\x8a\xe3\x30\x0c\x86\xcf\x9b\xa7\xf8\xd7\x97\x3d\xb5\x85\x9e\xb3\x79\x89\x39\x0c\x73\x2a\x8e\xad\xd4\x86\xc4\x0a\x92\xd2\xa1\x84\xbc\xfb\x90\xd6\x03\x65\x98\x8b\x6d\xfc\x4b\x1f\xd2\xb7\xae\x88\x34\xe4\x42\x70\xba\xf4\x1a\x24\xf7\x74\xd1\x25\x04\x52\x75\xdb\xd6\xac\xab\xd1\x34\x8f\xde\x08\x2e\xf0\x34\x71\xb9\x24\xf2\x91\xc4\xe1\x88\x6d\x6b\x9a\x36\xe6\x1b\xc2\xe8\x55\xff\xbb\xe0\x25\xba\xae\x01\x80\x36\x9d\x5f\x7f\x0f\xb5\xa9\x7b\x7b\xa2\xff\xb6\xa7\x74\xae\x95\x3f\x00\x87\x9e\xe3\xdd\x75\xcd\x9f\xd7\xc0\x8f\x24\x86\xc7\x79\xf8\x9e\x0e\xc2\x23\xd5\x68\xaf\x7f\xc0\xe6\xee\x83\x17\x01\x4d\x3e\x8f\xf0\x31\x0a\xa9\x22\x79\x45\x4f\x54\x20\x74\xcd\x6a\x24\x14\x8f\x78\xa7\x7f\x37\x82\x52\x31\xdc\x79\x81\x47\xe0\x32\x64\x99\xbc\x65\x2e\x15\x60\xc9\x1b\x3e\xb3\x25\xe4\xa2\x26\x4b\xd8\x33\xc5\xc0\x82\xc0\xd3\x3c\x92\xe5\x72\x85\x25\x42\x95\x37\x3f\x9a\x67\xe1\x7d\xc2\x63\x7b\x9a\xf7\x3d\x4e\x31\xdf\xea\xae\xcf\x67\xbd\x7e\x93\x3b\x30\x1b\xc9\xd3\x3c\xa8\xc4\xdd\xf1\x57\x00\x00\x00\xff\xff\x2d\xb3\xbc\x6c\xa4\x01\x00\x00")

func templatesHtmlSubscribe_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlSubscribe_successHtml,
		"templates/html/subscribe_success.html",
	)
}

func templatesHtmlSubscribe_successHtml() (*asset, error) {
	bytes, err := templatesHtmlSubscribe_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/subscribe_success.html", size: 420, mode: os.FileMode(420), modTime: time.Unix(1568593719, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlUnsubscribeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\xc1\x6e\xdc\x20\x10\x3d\xdb\x5f\x31\xe2\xd2\x93\xd7\x52\xce\x2c\xb7\x48\xad\x54\xb5\x51\x37\x39\xf4\x54\x61\x33\x8e\x51\x81\xb1\x60\x9c\x76\x65\xf9\xdf\x2b\x58\xef\xc6\xa9\xf6\x82\x0d\xbc\x79\xf3\x66\x78\xb3\x2c\x60\x70\xb0\x01\x41\xcc\x21\xcd\x5d\xea\xa3\xed\x50\xac\x6b\xbd\x2c\x8c\x7e\x72\x9a\x11\x44\x4f\xde\x53\xf8\x35\xa2\x36\x18\x05\x1c\x60\x5d\xeb\x5a\x1a\xfb\x06\xbd\xd3\x29\x1d\x45\xaf\xa3\x11\xaa\x06\x00\x90\xe3\xc3\xfe\xb4\xd9\x82\xd4\xcb\x3b\x3d\x0c\x91\x3c\xf0\x88\x20\x7b\x32\xa8\x96\x05\x0e\x27\xcb\xf8\x4d\x7b\x84\x75\x95\x6d\x39\x05\xaf\xad\xb3\xe1\x15\x9c\x4d\x2c\xdb\xf1\x61\xe3\xff\x2f\x6d\xd3\x91\x39\x0b\x55\xd7\xd5\xb2\x80\x1d\xe0\xf0\x18\x23\xc5\xa2\xb0\xda\x63\xb5\xc3\xc8\x50\xd6\xc6\xe8\xf0\x9a\x0b\x89\xe4\x70\xbb\x11\xaa\xae\x32\x7d\xd6\x72\x63\xa8\x64\x6b\xec\x9b\x2a\xd4\x18\x4c\x3e\xca\x98\xba\x92\x03\x45\x7f\x65\xce\xff\x02\x3c\xf2\x48\xe6\x28\x9e\xbe\x9f\x9e\x05\xe8\x9e\x2d\x85\xa3\xc8\x74\x2f\x3f\xbe\xc2\xba\x5e\x13\x5c\xd6\xbd\xb2\x1c\xdf\xbc\x46\x9a\xa7\x8c\xa9\xa4\xd3\x1d\x3a\x18\x28\x1e\x85\x36\x26\x62\x4a\x42\x3d\xe6\x66\xc0\xb6\x95\x6d\x81\x14\xb0\x0d\xd3\xcc\xc0\xe7\x09\x8f\x02\x33\x48\x7c\xa0\xed\x29\x70\x24\x27\x20\x68\x8f\xef\x7c\x60\xcd\x6e\xa3\xa3\xd5\x8d\xc1\xcb\xe3\x98\xee\xbc\x31\x7d\x46\x37\x09\x98\x9c\xee\x71\x24\x67\x30\x1e\xc5\x4f\x9a\x23\xe0\x5e\xcb\x45\x72\xf2\xda\xb9\x42\xba\x8b\xdc\xeb\x60\xfc\xcb\x90\x97\xc6\xcf\x8c\x46\xa8\xe7\xd1\x26\xb0\xa9\xb8\xe0\x03\x21\x9c\x69\x86\x9b\x55\x0c\x30\x15\xcc\xde\x0c\xf0\xc7\xf2\x78\x90\x6d\xc9\xba\xb5\xf5\xfa\x52\xbb\x16\x77\x33\x33\x85\xad\x37\x69\xee\xbc\xe5\x9b\xa8\x8e\x03\x74\x1c\x9a\x29\x5a\xaf\xe3\x59\xa8\x53\xb9\x97\xed\x25\xe8\x46\x24\xdb\x2c\x7f\x73\xde\x25\x45\xb9\xb8\xeb\xc4\x81\x88\xb3\xd5\xeb\x4a\x4e\xea\xcb\x90\x2b\xf9\x14\x11\x1c\xd1\xef\x2c\x9d\x09\x24\x7a\x75\xab\x4d\xb6\xe8\xd5\xdd\xfa\x78\xc4\x00\x52\xc3\x18\x71\xb8\x78\xe8\x49\xf3\x98\x0e\xa7\xdb\x04\x65\x3f\xe5\xc9\x02\x0a\x40\x6f\x18\x61\xc4\x88\xb2\xd5\xea\x20\xdb\xe9\x83\xdc\xed\x73\x6f\x9e\x37\xbd\x65\xd8\xaf\xfe\xfe\x17\x00\x00\xff\xff\x46\xab\xa7\xad\x11\x04\x00\x00")

func templatesHtmlUnsubscribeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlUnsubscribeHtml,
		"templates/html/unsubscribe.html",
	)
}

func templatesHtmlUnsubscribeHtml() (*asset, error) {
	bytes, err := templatesHtmlUnsubscribeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/unsubscribe.html", size: 1041, mode: os.FileMode(420), modTime: time.Unix(1568386881, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlUnsubscribe_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xc1\x6e\xf3\x20\x10\x84\xcf\xbf\x9f\x62\x7e\x2e\x3d\x25\x91\x72\x76\xfd\x12\x3d\xf4\x18\x11\x58\x17\x24\x60\x11\xac\x53\x45\xc8\xef\x5e\xd9\xa1\x55\xd4\x5e\x00\x31\x3b\xc3\xf0\xb5\x06\x4b\xb3\x4f\x04\xb5\xa4\xba\x5c\xab\x29\xfe\x4a\x97\xba\x18\x43\xb5\xaa\x75\x1d\x5a\x83\x50\xcc\x41\x0b\x41\x19\x8e\x91\xd3\xc5\x91\xb6\x54\x14\x70\xc4\xba\x0e\xc3\x68\xfd\x0d\x26\xe8\x5a\x5f\x95\xd1\xc5\xaa\x69\x00\x80\xd1\x9d\x9f\x6f\x0f\xdd\x35\xbd\x3d\xc2\xff\x8f\x27\x77\xee\x93\xbf\x02\x0e\x57\xb6\x77\x35\x0d\xff\x9e\x05\x1d\xa8\x08\xf6\xf5\xf0\xdd\x0f\x85\x03\x75\x69\x9b\xdf\xc3\xf2\xf4\x4e\x2f\x37\x42\xa5\x24\xb8\xf3\x02\x0d\xc3\x69\xf6\x25\x6a\xf1\x9c\x40\x51\xfb\x00\x71\x5a\xf0\xe9\xc5\xc1\xa7\x2a\x65\x31\x9b\x56\x31\x73\x81\xe1\x98\x03\x89\x4f\x1f\x10\x47\xf8\x01\x93\x77\x7b\x2e\xbc\xbd\x7d\x1c\x4f\x79\x6b\x78\xb2\xfe\xd6\x7f\xf1\x38\xf6\x6d\x68\xed\x0f\xb7\x99\x59\xa8\x74\xaa\x94\xec\x46\xef\x2b\x00\x00\xff\xff\xb0\x69\x7a\x0d\x82\x01\x00\x00")

func templatesHtmlUnsubscribe_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlUnsubscribe_successHtml,
		"templates/html/unsubscribe_success.html",
	)
}

func templatesHtmlUnsubscribe_successHtml() (*asset, error) {
	bytes, err := templatesHtmlUnsubscribe_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/unsubscribe_success.html", size: 386, mode: os.FileMode(420), modTime: time.Unix(1568593735, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/html/common_footer.html":       templatesHtmlCommon_footerHtml,
	"templates/html/common_header.html":       templatesHtmlCommon_headerHtml,
	"templates/html/confirm.html":             templatesHtmlConfirmHtml,
	"templates/html/confirm_action.html":      templatesHtmlConfirm_actionHtml,
	"templates/html/confirm_email.html":       templatesHtmlConfirm_emailHtml,
	"templates/html/confirm_success.html":     templatesHtmlConfirm_successHtml,
	"templates/html/index.html":               templatesHtmlIndexHtml,
	"templates/html/subscribe.html":           templatesHtmlSubscribeHtml,
	"templates/html/subscribe_success.html":   templatesHtmlSubscribe_successHtml,
	"templates/html/unsubscribe.html":         templatesHtmlUnsubscribeHtml,
	"templates/html/unsubscribe_success.html": templatesHtmlUnsubscribe_successHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"html": &bintree{nil, map[string]*bintree{
			"common_footer.html":       &bintree{templatesHtmlCommon_footerHtml, map[string]*bintree{}},
			"common_header.html":       &bintree{templatesHtmlCommon_headerHtml, map[string]*bintree{}},
			"confirm.html":             &bintree{templatesHtmlConfirmHtml, map[string]*bintree{}},
			"confirm_action.html":      &bintree{templatesHtmlConfirm_actionHtml, map[string]*bintree{}},
			"confirm_email.html":       &bintree{templatesHtmlConfirm_emailHtml, map[string]*bintree{}},
			"confirm_success.html":     &bintree{templatesHtmlConfirm_successHtml, map[string]*bintree{}},
			"index.html":               &bintree{templatesHtmlIndexHtml, map[string]*bintree{}},
			"subscribe.html":           &bintree{templatesHtmlSubscribeHtml, map[string]*bintree{}},
			"subscribe_success.html":   &bintree{templatesHtmlSubscribe_successHtml, map[string]*bintree{}},
			"unsubscribe.html":         &bintree{templatesHtmlUnsubscribeHtml, map[string]*bintree{}},
			"unsubscribe_success.html": &bintree{templatesHtmlUnsubscribe_successHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

// Code generated by go-bindata.
// sources:
// templates/html/common_footer.html
// templates/html/common_header.html
// templates/html/confirm.html
// templates/html/confirm_action.html
// templates/html/confirm_email.html
// templates/html/confirm_success.html
// templates/html/crumb_error.html
// templates/html/index.html
// templates/html/invite_code.html
// templates/html/invite_request.html
// templates/html/invite_request_email.html
// templates/html/invite_request_success.html
// templates/html/invite_subscribe.html
// templates/html/invite_subscribe_success.html
// templates/html/subscribe.html
// templates/html/subscribe_success.html
// templates/html/unsubscribe.html
// templates/html/unsubscribe_success.html
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesHtmlCommon_footerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xce\xcf\xcd\xcd\xcf\x8b\x4f\xcb\xcf\x2f\x49\x2d\x52\xaa\xad\xe5\xe2\xe4\xb4\xd1\x4f\xc9\x2c\xb3\xe3\xe2\xb4\xd1\x4f\xca\x4f\xa9\xb4\xe3\xb2\xd1\xcf\x28\xc9\xcd\xb1\xe3\xaa\xae\x4e\xcd\x4b\xa9\xad\xe5\x02\x04\x00\x00\xff\xff\x51\x34\x73\xde\x3d\x00\x00\x00")

func templatesHtmlCommon_footerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlCommon_footerHtml,
		"templates/html/common_footer.html",
	)
}

func templatesHtmlCommon_footerHtml() (*asset, error) {
	bytes, err := templatesHtmlCommon_footerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/common_footer.html", size: 61, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlCommon_headerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xb1\x52\xc3\x30\x0c\x86\xe7\xe4\x29\x84\x67\xdc\x1c\x1b\x83\x9d\x05\x18\x58\xa0\x77\xb0\x30\x71\x8a\xad\x36\xba\x4b\x9c\xe0\xa8\x69\xb9\x9c\xdf\x9d\x6b\x13\xa0\x85\x49\xb6\xfc\x5b\xdf\xa7\x69\xf2\xb4\xe1\x40\xa0\x5c\xd7\xb6\x5d\x78\xaf\x09\x3d\x45\x95\x92\xb9\xba\x7f\xbe\x7b\x7d\x5b\x3f\x40\x2d\x6d\x53\xe6\x66\x2e\x99\x39\x26\xca\x3c\xcb\x4c\x4b\x82\xe0\x6a\x8c\x03\x89\x55\x3b\xd9\xe8\x5b\x05\xc5\xef\x53\x2d\xd2\x6b\xfa\xd8\xf1\x68\xd5\x41\xef\x50\xbb\xae\xed\x51\xb8\x6a\x48\x81\xeb\x82\x50\x10\xab\x98\x2c\xf9\x2d\x5d\xfc\x0c\xd8\x92\x55\x23\xd3\xbe\xef\xa2\x9c\x85\xf7\xec\xa5\xb6\x9e\x46\x76\xa4\x4f\x97\x6b\xe0\xc0\xc2\xd8\xe8\xc1\x61\x43\xf6\xe6\x7b\x90\xb0\x34\x54\x4e\x13\xac\x5e\x58\xe8\x09\x5b\x82\x94\x4c\x31\xb7\xff\x90\x3c\x0d\x2e\x72\x2f\xdc\x85\x33\xd8\x3c\xc9\x14\xcb\xc2\xa6\xea\xfc\x67\x99\xe7\x19\x00\x80\x09\x38\x82\x6b\x70\x18\xac\x0a\x38\x56\x18\x61\x2e\x9a\x0e\x3d\x06\xaf\x9b\xad\x3a\x51\xf0\x32\xa5\xab\x88\xc1\x2b\xa8\x23\x6d\xac\x3a\xda\xad\x51\xea\x61\xf5\x18\x3c\x1d\x20\x25\xf5\xdf\x18\xcb\x05\x59\x04\x1c\x97\xf3\xd2\xf1\xfc\x23\x71\xb4\x46\x0e\x14\x55\x99\x4f\x13\x05\x9f\x52\xfe\x15\x00\x00\xff\xff\xa7\x08\x14\x24\xdd\x01\x00\x00")

func templatesHtmlCommon_headerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlCommon_headerHtml,
		"templates/html/common_header.html",
	)
}

func templatesHtmlCommon_headerHtml() (*asset, error) {
	bytes, err := templatesHtmlCommon_headerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/common_header.html", size: 477, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirmHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xcf\x8b\x9d\x30\x10\xc7\xcf\xfa\x57\x0c\x73\x57\x61\xcf\xd1\x4b\xe9\xad\xb4\x4b\x5f\x7b\xe8\xa9\x44\x33\xae\x01\x93\x91\x31\x2e\x3c\x82\xff\x7b\x49\xd4\xc7\xbe\xa5\x97\x30\xcc\x8f\xcf\xf7\x9b\x49\x62\x04\x43\xa3\xf5\x04\x38\xb0\x1f\xad\x38\xdc\xf7\x32\xc6\x40\x6e\x99\x75\xc8\x69\xe7\xd8\xff\x9d\x48\x1b\x12\x84\x1a\xf6\xbd\x2c\x95\xb1\xef\x30\xcc\x7a\x5d\x5b\x1c\xb4\x18\xec\x4a\x00\x00\x35\xbd\x7c\xcc\x56\xe7\x50\xa7\x06\x36\xd4\xc5\x08\xf5\xcd\x06\xfa\xae\x1d\xc1\xbe\xab\x26\x67\xe1\xcb\xa1\xab\x83\x65\x0f\xb7\x40\x8b\x6a\xa6\x97\x93\xf7\x49\xa6\xea\xd9\xdc\xb1\x2b\xcb\x22\x46\xb0\x23\xd4\x5f\x45\x58\xb2\xa3\xe2\x63\xaf\x9e\x49\x02\xe4\xb3\x32\xda\xbf\x25\xe3\xc2\x33\x9d\x15\xec\xca\x22\xe1\x93\xa1\x07\xa1\x50\x8d\xb1\xef\x5d\x46\x93\x37\x39\x55\x16\x6a\x64\x71\x17\x36\xc5\x08\x8e\xc2\xc4\xa6\xc5\xd7\x1f\xb7\x5f\x08\x7a\x48\xbe\x5b\x8c\x11\xd2\xdd\x7e\xff\xfc\x06\xf5\xab\x0e\xd3\x5a\x9f\xf7\x82\x7d\xbf\xf4\x9e\x4d\x26\x5a\xf5\x26\xbc\x2d\x57\x5d\xcd\xba\xa7\x19\x46\x96\x16\xb5\x31\x42\xeb\x8a\xdd\xd3\x7a\xd2\xc6\x54\x93\xdb\xae\x19\xeb\x97\x2d\x40\xb8\x2f\xd4\x62\x2a\xe3\x13\x7f\x60\x1f\x84\x67\x04\xaf\xdd\xa3\xc1\x9a\x2b\x5a\x66\x3d\xd0\xc4\xb3\x21\x69\xf1\x0f\x6f\x02\xc3\x67\xb9\xbc\xee\x6b\x37\x65\xa1\xfa\x2d\x04\xf6\xa7\xe0\xba\xf5\xce\x86\x87\x64\x1f\x3c\xf4\xc1\x57\x8b\x58\xa7\xe5\x8e\xdd\x2d\xd7\x55\x73\x0c\x1d\x80\x26\x19\x3b\xdf\xf7\xc0\xe6\xdd\x9c\xf1\xff\xfe\xde\xc8\x1c\x48\x8e\x8f\x79\xbd\xcd\xbf\x00\x00\x00\xff\xff\x3f\xb4\xe2\x5b\xb9\x02\x00\x00")

func templatesHtmlConfirmHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirmHtml,
		"templates/html/confirm.html",
	)
}

func templatesHtmlConfirmHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirmHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm.html", size: 697, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirm_actionHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xcd\x8e\x9c\x3c\x10\x3c\xc3\x53\xb4\x7c\x07\xa4\x3d\xc3\x48\x9f\x56\xdf\x2d\x4a\x46\x99\xe4\xbc\x32\xb8\x59\xac\xd8\xee\x89\x69\x26\x19\x21\xde\x3d\xb2\x31\xec\x4f\x26\xd1\x4a\x89\x72\x19\xd9\xfd\x53\xd5\x54\xd7\x78\x9e\x41\x61\xaf\x1d\x82\xe8\xc8\xf5\xda\xdb\x07\xd9\xb1\x26\x27\x96\x25\x9f\x67\x46\x7b\x36\x92\x63\xd6\x5a\x72\x0f\x03\x4a\x85\x5e\x40\x09\xcb\x92\xe7\xb5\xd2\x17\xe8\x8c\x1c\xc7\x46\x74\xd2\x2b\x71\xc8\x01\x00\xea\xe1\xee\x79\xb4\x48\x4d\x87\x3c\x9b\x67\xd0\x3d\xe0\x57\x28\xff\x8b\x2c\x20\xc6\xa9\x1d\x3b\xaf\x5b\x14\x01\x31\x3b\x1a\x94\x23\x42\x9a\x05\x78\x90\x0c\x57\x9a\xe0\x9b\x1e\x07\x60\x82\xbd\x3c\x5c\x78\x40\xa8\x3b\x52\x78\x98\x67\x28\x4f\x9a\xf1\xbd\xb4\x08\xcb\x52\x57\x31\x0a\x56\x6a\xa3\xdd\x23\x18\x3d\x72\x8a\xc5\x19\xd0\x8c\xf8\x26\xba\xc9\x3d\x11\xf6\x9e\xec\x1f\x50\x3a\x15\x18\xa3\x3c\xd5\x70\xb7\x0a\xb5\x5e\x5f\x89\x58\xb4\xa4\xae\xe2\x90\x6f\x6a\x95\xff\x7b\x4f\x3e\xea\x9d\x3d\xaf\x95\x06\x3d\x43\xfc\x2d\x94\x74\x8f\x61\x2d\x9e\x0c\xa6\x4c\x90\x3b\xc0\x87\x39\x77\x84\xac\xae\x94\xbe\xbc\x12\x21\xcf\xea\x9e\xbc\xdd\x70\xc3\x59\x80\x45\x1e\x48\x35\xe2\xf8\xe1\xf4\x49\xc0\xea\x89\x46\xcc\x33\x84\x6f\xfe\xfc\xf1\x1d\x94\x47\xc9\xc3\x58\xde\x27\xe9\x96\x65\x23\xac\xb5\x3b\x4f\x0c\x7c\x3d\x63\x23\x06\xad\x14\x3a\x01\x4e\x5a\x6c\x44\x90\x43\xc0\x45\x9a\x09\x23\x56\x79\x4f\x2a\xcc\x20\xa0\x0a\xdf\xfb\x93\x1a\xd3\xc8\x64\x8b\x8e\x1c\x7b\x32\xb0\x5d\x07\xec\xbe\xb4\xf4\x3d\xf0\x65\x2f\xc8\xf6\xcc\x6d\x80\x22\xd6\x0a\xd0\xaa\xd9\xcc\xfe\x34\xd8\x7a\x8d\x90\x46\xb6\x68\x7e\x01\x11\x73\x02\x7a\xf2\x2f\x9b\x92\xd2\xbf\x37\x77\xac\xfa\x07\x0e\xdf\xa6\xd9\x37\xfc\x26\xe2\xbf\xe4\xf5\x9d\x7c\x35\x7c\x96\xd5\x55\x14\x6d\x73\x47\x32\x60\x38\x67\x29\xd4\x4e\xcc\xe4\xd2\x12\xc7\xa9\xb5\x9a\xf7\x15\xb6\xec\xa0\x65\x57\x9c\xbd\xb6\xd2\x5f\xc5\xe1\x14\xf3\x75\xb5\x36\x25\xa4\x60\xec\xe0\xdb\x1b\xff\xb5\x48\x17\x6b\xd2\xf9\xd6\xb3\xd6\x13\x31\xfa\xf5\xcd\xdb\xda\x7f\x04\x00\x00\xff\xff\x90\x23\x01\x0f\x1b\x05\x00\x00")

func templatesHtmlConfirm_actionHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirm_actionHtml,
		"templates/html/confirm_action.html",
	)
}

func templatesHtmlConfirm_actionHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirm_actionHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm_action.html", size: 1307, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirm_emailHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\xcf\x6e\xdb\x3c\x10\xc4\xef\x7e\x8a\x81\x2f\xf9\x3e\x20\x50\xee\x81\xe2\x22\xc8\xa5\x05\x8a\xa2\xe8\x1f\xf4\x58\xd0\xe4\x48\x5a\x98\x22\x55\x92\x72\xea\x0a\x7a\xf7\x82\x92\xed\x38\xad\x1b\x04\xbe\xd9\xc6\x7a\xf6\x37\xb3\xc3\x61\x80\x61\x25\x8e\x58\x6a\xef\x2a\x09\xed\x77\xb6\x4a\xec\x12\xe3\xb8\x28\xbb\xd5\x5b\x5a\xeb\xaf\xcb\x9b\x6e\xb5\x58\x0c\x03\xa4\x02\x7f\xa0\xb8\xd7\x49\xbc\xc3\x32\xf6\xeb\xa8\x83\xac\x79\x18\xff\xc6\xab\x2d\x11\xa8\x29\x5b\x1a\x28\x38\x9f\xa4\x12\xad\xa6\xf9\xd4\xa8\x84\x9d\xef\xaf\x0c\xac\x6c\x88\xe4\x71\x54\xc8\x5f\x52\x43\x94\xda\x1b\xae\x86\x01\xc5\x67\x49\xfc\xa0\x5a\x62\x1c\xcb\x9b\xe9\x57\x64\x32\x71\x35\xac\xc4\x54\xe0\x8b\xc7\x9e\x39\x8b\x86\x83\x56\x37\xed\xea\x2c\x55\x24\xb6\x12\x25\x21\x35\x12\xf1\xc8\x75\xa7\x6a\xde\x4e\x66\x86\x01\xb4\x91\x97\x62\xf7\xee\x09\xbc\x0a\xbe\xbd\x08\xbd\xed\x2c\x13\xa7\xbf\x1e\xf5\xf6\xf0\xc1\x6b\xc6\xf8\x1a\x13\xce\x8c\xe3\x22\x7b\x38\x6e\xcf\xcb\xbf\x7e\x7a\x8f\xe2\xa3\x4a\x4d\x2c\x1e\xf6\x11\x1d\x51\xe6\x63\x96\xdd\xea\xde\x19\xd0\x25\x86\x59\x7a\x9f\xe5\xec\x39\x4f\xde\x1e\x27\x9f\x9c\x3d\x78\xc3\x33\x52\x73\x80\xca\x46\x9f\xd9\xb7\x62\x68\x66\xd1\x46\x39\xb3\x83\x15\xb7\xc9\xb1\x19\x8f\xb5\x4f\x0d\xc4\x41\x21\x8a\xab\x2d\xa1\xad\xe8\xcd\xc9\x2a\x85\x26\xb0\xba\x5b\xbe\xe4\xe4\x4d\xde\x7e\x77\xc2\xb3\x7c\xd1\xf8\x5f\xe3\xe5\x8d\x5a\xbd\xba\xd3\xef\xaa\x7c\x7c\x18\x31\xb9\x16\x50\x71\x73\xa6\xb8\x12\x9f\x5d\x18\xff\xad\xa9\x55\x1f\x79\x8d\xa8\x76\xd7\x88\xbe\xa5\x77\x9c\x3b\x17\xa5\x76\x34\xe8\x3b\xf4\x39\x83\xb9\xbc\xd3\xab\x83\x32\x26\x30\xc6\xff\x0f\x97\x37\x12\x03\x6b\x15\xf6\x69\xb6\x8c\x51\xd5\x2c\xce\x54\xf8\x3c\xe5\x99\x9e\xfe\x9b\xb4\xf2\x01\xfc\xa9\x72\x2d\xff\x20\x4e\x41\xf2\x41\x9f\xeb\x5d\x08\x0f\xe5\x0c\x1e\x09\xd5\x79\xeb\x6b\xf9\xc5\x69\x6f\x7e\x04\xe2\xb4\x77\x5b\x3a\xa1\xd3\x27\x1e\x9d\xc9\x16\x4f\x3e\xfe\x0e\x00\x00\xff\xff\xf8\xf0\x46\x4d\xb4\x04\x00\x00")

func templatesHtmlConfirm_emailHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirm_emailHtml,
		"templates/html/confirm_email.html",
	)
}

func templatesHtmlConfirm_emailHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirm_emailHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm_email.html", size: 1204, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirm_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x6b\xdc\x30\x10\x3d\xdb\xbf\x62\xd0\xa5\x97\xae\x0d\x39\x2b\x86\x1e\x0a\x2d\x94\x52\x1a\xf6\xd0\x53\x90\xa5\xf1\x5a\x54\x1f\x8e\x24\x6f\x09\xc2\xff\xbd\x48\xd6\x3a\x6e\x36\x69\x68\x2f\xb6\x34\x5f\x6f\xde\x9b\x41\x31\x82\xc0\x41\x1a\x04\xc2\xad\x19\xa4\xd3\xf7\x7e\xe6\x1c\xbd\x27\xcb\x52\xc7\x18\x50\x4f\x8a\x85\xec\xd6\xda\x9a\xfb\x11\x99\x40\x47\xa0\x81\x65\xa9\xeb\x18\x41\x0e\xd0\x7c\x74\xce\xba\x6c\xa0\x42\x9e\x81\x2b\xe6\xfd\x2d\xe1\xcc\x09\xd2\xd5\x00\x00\x74\xbc\xd9\x5b\x0f\xa5\x4a\xf7\xc9\xe9\xf7\x10\x46\x74\x08\xbf\x98\x07\x06\x93\xb3\xbd\x42\x0d\xdc\xea\x49\x61\x90\xe6\x04\x8f\x76\x76\xe0\xf0\x61\x46\x1f\x68\x3b\xde\x94\x8a\xcf\x80\x0e\xbd\x15\x8f\xa4\xab\xab\xba\xda\xbb\x98\x42\x17\x20\x7f\x0f\x82\x99\x53\x6a\xdd\x59\x85\xc5\x93\x12\x52\xb5\x18\x77\x24\x2a\xda\x0a\x79\x2e\x30\xeb\xb1\xfc\x12\x5f\x54\x1e\xff\x87\x6a\x5d\xad\x62\xe1\x03\x34\x1f\x78\x90\xd6\x00\xf1\x73\xef\xb9\x93\x3d\x92\x8c\x7b\xb7\x5e\xa7\xec\x2c\x0a\x60\xce\xbb\x80\x56\x47\xe3\x5f\x0f\x32\x22\xc5\xac\x6d\xbf\xa5\xd3\xeb\x32\x5d\xe6\xff\x4c\xa7\x4d\xa8\xbf\x73\x48\x41\x3f\xd2\xc4\x5e\xec\x13\x82\x4d\xe3\x06\xca\xad\xc0\x2e\xa9\x7e\x27\x03\x7e\x65\x3a\xb1\xa3\x6d\xb6\x82\x66\x52\xa5\xc1\x2b\xe9\x03\x48\xbf\x25\x37\x5b\x0b\x9b\x1c\x05\x0d\x46\x76\x46\xe8\x11\x0d\xcc\x66\x6b\x48\xc0\xe0\xac\xfe\x37\xbc\x26\x97\x7c\x02\xca\x92\x16\xdb\x65\x09\xde\x1e\xe4\x95\xe8\x83\xb5\x61\x5d\x82\x3c\x93\xa9\xfb\x3c\xa4\xbd\x06\x81\x5c\x0a\x4c\xc7\x77\x02\x94\xfc\x99\x05\xda\x51\x78\x62\xf0\x87\x28\x29\x95\x33\x03\xc2\x82\xb7\x40\x19\x8c\x0e\x87\x5b\x12\x23\x24\x7a\xc7\xef\x5f\xa0\xf9\xc6\xc2\xe8\x9b\xe3\xae\xd4\xb2\x90\xae\x94\x93\x1e\x26\x76\x42\xda\xb2\xae\xa1\xed\xd4\x6d\xdc\xae\xd6\xe8\x6a\xfb\x57\xe7\x4b\x2f\x43\xe1\x98\x9f\x8d\x4b\xdc\xef\x00\x00\x00\xff\xff\x4b\x50\x3b\xcf\x5f\x04\x00\x00")

func templatesHtmlConfirm_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirm_successHtml,
		"templates/html/confirm_success.html",
	)
}

func templatesHtmlConfirm_successHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirm_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm_success.html", size: 1119, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlCrumb_errorHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x50\xc1\x6a\xc3\x30\x0c\x3d\xc7\x5f\xf1\xf0\x79\x69\xa1\xe7\x2c\xb7\xc1\xfe\xa2\x38\x91\xda\x04\x6c\x2b\x53\x9c\x8e\x62\xf2\xef\xc3\x9b\x0f\x61\xf4\x22\x09\x3d\xde\x7b\x7a\xca\x19\xc4\xb7\x39\x32\xec\xa8\x5b\x18\xae\xac\x2a\x6a\xf7\xdd\xe4\x9c\x38\x2c\xde\xa5\x02\x49\x08\x12\xaf\x13\x3b\x62\xb5\x38\x61\xdf\x8d\xe9\x68\x7e\x60\xf4\x6e\x5d\xdf\xed\xe8\x94\x6c\x6f\x00\xa0\x9b\x2e\xc7\x6d\x5b\x49\xfd\xa7\x86\x37\xa4\x89\x95\xf1\xed\x56\x38\x2c\x2a\x83\xe7\x80\x51\xc2\xe2\x39\xcd\xf1\x8e\xa7\x6c\x0a\xe5\xaf\x8d\xd7\xd4\x9d\xa7\x4b\x55\xfc\x67\xd4\x0e\x42\x4f\xdb\x9b\xc6\x34\x47\xc8\x79\xd6\x84\xdf\xda\x92\x8b\xf7\x72\xa9\x8a\xe7\x8a\x14\x42\x51\xcb\x19\xa7\x8f\x12\xb2\x84\x68\xba\x33\xcd\x8f\x6a\xf3\x37\xd6\xf6\x2a\xff\x4d\x24\x71\x7d\x0e\x38\x52\x51\xf8\x09\x00\x00\xff\xff\x54\xdc\xe2\x26\x41\x01\x00\x00")

func templatesHtmlCrumb_errorHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlCrumb_errorHtml,
		"templates/html/crumb_error.html",
	)
}

func templatesHtmlCrumb_errorHtml() (*asset, error) {
	bytes, err := templatesHtmlCrumb_errorHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/crumb_error.html", size: 321, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x8a\xc3\x20\x14\x45\xf7\x7e\xc5\xc5\x0f\x30\x3f\xe0\xb8\x9c\xd5\x2c\x86\x09\x59\x0f\x26\x3e\x1b\xc1\x68\x49\x0c\x14\x1e\xfe\x7b\x49\x5b\x4a\x43\x5b\xe8\xf2\xc2\x79\x1c\xde\x61\x86\x23\x1f\x12\x41\x86\xe4\xe8\x24\x51\xab\x60\x46\xa1\xe9\x18\x6d\x21\xc8\x21\x4f\x53\x4e\xff\x23\x59\x47\xb3\x84\xda\x00\xa1\xd7\x68\x84\x00\x00\x66\x04\x0f\xf5\x1d\xed\x61\x51\xed\xda\x2f\xc3\x1c\x7a\x42\xad\x3a\x06\xa3\x2d\xc6\x99\xfc\x97\x64\x46\x1b\x0a\x75\x7f\x3f\x50\xbf\xb6\x8c\x7b\x54\x9a\xfb\xd2\x8d\x35\xba\x89\xc1\x30\x83\x92\xdb\x64\x4f\x96\x2e\x2d\x9f\x7b\xf6\xb0\x34\x0f\xfb\x8d\x4b\xe8\xe6\xf2\xdd\xab\x0a\x3e\xe7\xb2\x55\xb8\x46\xba\x1d\x9d\x03\x00\x00\xff\xff\x26\x68\xf2\xa9\x44\x01\x00\x00")

func templatesHtmlIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlIndexHtml,
		"templates/html/index.html",
	)
}

func templatesHtmlIndexHtml() (*asset, error) {
	bytes, err := templatesHtmlIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/index.html", size: 324, mode: os.FileMode(420), modTime: time.Unix(1569772384, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_codeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x53\x4f\x6b\xdd\x30\x0c\x3f\x27\x9f\x42\xf8\xb2\x53\x12\xe8\xd9\x09\xec\xd0\xc3\x60\x6c\x65\xdd\x0e\x3d\x15\x27\xd6\x7b\x31\xd8\x56\x70\x94\xc7\x1e\x26\xdf\x7d\xd8\x49\xda\xf7\xba\x5e\x8c\x91\xf4\xfb\x23\x4b\x8e\x11\x34\x9e\x8c\x47\x10\xc6\x5f\x0c\xe3\xeb\x40\x1a\xc5\xba\x96\x31\x32\xba\xc9\x2a\x46\x10\x03\x39\x47\xfe\x75\x44\xa5\x31\x08\xa8\x61\x5d\xcb\x52\x6a\x73\x81\xc1\xaa\x79\x6e\xc5\xa0\x82\x16\x5d\x09\x00\x20\xc7\x87\xdb\x68\xb5\x83\xba\x17\x5a\xbe\x5c\x10\x7a\x44\x0f\x9b\x94\x06\x26\xe0\x11\x41\x26\xcd\x2e\x46\xa8\x9f\x0d\xe3\x0f\xe5\x10\xd6\x55\x36\x39\x0a\x4e\x19\x6b\xfc\x19\xac\x99\x59\x36\xe3\xc3\xae\xf2\x41\xbc\xea\x49\x5f\x45\x57\x96\x45\x8c\x60\x4e\x50\x3f\x86\x40\x21\xfb\x2c\x6e\x6b\x95\xc5\xc0\x90\xcf\x4a\x2b\x7f\x4e\xed\x04\xb2\xb8\x67\x44\x57\x16\x89\x3e\x79\x79\x63\x28\x64\xa3\xcd\xa5\xcb\xd4\xe8\x75\x0e\x95\x85\x3c\x51\x70\x07\x6d\xba\x0b\x70\xc8\x23\xe9\x56\x3c\xfd\x7c\xfe\x2d\x40\x0d\x6c\xc8\xb7\x22\x46\x48\x6d\xfd\xf9\xf5\x1d\xea\x27\xc5\xe3\x5c\x7f\xcb\xed\x7f\x1d\x06\x9c\x18\xd6\xf5\x10\xbd\x77\x9a\x28\xab\x73\xa0\x65\x3a\xf2\xd2\xaa\x1e\x2d\x9c\x28\xb4\x77\xc3\xea\x1e\xd3\x1b\x81\xd2\x3a\xe0\x3c\xcb\x26\x97\x1d\x18\xe3\xa7\x85\x81\xaf\x13\xb6\x82\xf1\x2f\x8b\x3b\xfe\x81\x3c\x07\xb2\x02\xbc\x72\x78\xcf\x0a\x46\x7f\x08\xa8\x60\x54\xa5\x71\x1e\x82\xe9\x51\xf7\xd7\xb7\xf4\x88\x76\x12\x30\x59\x35\xe0\x48\x56\x63\x68\xc5\x0b\x2d\x61\x1f\x33\x6c\x26\x77\x3f\xb3\x53\xd6\xde\x72\x6f\xe0\x5b\x53\xc9\x26\xa4\xa3\x72\x0b\xa3\x16\x5d\x5d\xd7\xb2\xc9\xc0\xee\x7d\x18\x65\x21\xfb\x85\x99\xfc\xde\xdc\xbc\xf4\xce\xbc\xb7\xd7\xb3\x87\x9e\x7d\x35\x05\xe3\x54\xb8\x8a\xee\x39\xe7\x65\xb3\x81\x36\x82\x26\xe9\xed\x0b\xb5\xd1\xe6\x39\x7c\xba\x60\x27\x22\x4e\x7b\xfc\x5f\xf5\x7e\xff\xec\xc3\xec\x98\xfc\x9b\x8e\xd5\xf9\x17\x00\x00\xff\xff\x71\xd8\x3c\x2b\x72\x03\x00\x00")

func templatesHtmlInvite_codeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_codeHtml,
		"templates/html/invite_code.html",
	)
}

func templatesHtmlInvite_codeHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_codeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_code.html", size: 882, mode: os.FileMode(420), modTime: time.Unix(1569779966, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_requestHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\x4d\x8b\xdc\x3c\x0c\xc7\xcf\xc9\xa7\x10\xba\x67\x02\x7b\x76\x72\x5b\x78\x1e\x28\xed\xb2\xd3\x1e\x7a\x5a\x9c\x58\x99\x18\xfc\x92\xda\xca\xd0\x21\xe4\xbb\x17\x7b\x92\xd9\x6c\xbb\x17\x63\xeb\xe5\xa7\xbf\x84\xbc\x2c\xa0\x68\xd0\x8e\x00\xb5\xbb\x6a\xa6\xb7\x40\xbf\x66\x8a\x8c\xeb\x5a\x2e\x0b\x93\x9d\x8c\x64\x02\xec\xbd\xb5\xde\xbd\x8d\x24\x15\x05\x84\x13\xac\x6b\x59\x0a\xa5\xaf\xd0\x1b\x19\x63\x83\xbd\x0c\x0a\xdb\x12\x00\x40\x8c\x4f\x47\x6b\xb5\x25\xb5\xaf\x77\x34\xe4\x4a\x92\xb5\x77\xd0\x7b\x45\x11\xd8\x03\x8f\x04\x22\xbd\xda\x65\x81\xd3\x59\x33\x7d\x95\x96\x60\x5d\x45\x9d\xad\x60\xa5\x36\xda\x5d\xc0\xe8\xc8\xa2\x1e\x9f\xb6\x52\x7f\x29\xa8\x3a\xaf\x6e\xd8\x96\x65\xb1\x2c\xa0\x07\x38\x3d\x87\xe0\x43\x16\x5b\x1c\x63\xa5\xa1\xc0\x90\xcf\x4a\x49\x77\x49\x3d\x05\x6f\x68\xf3\x60\x5b\x16\x09\x9f\xb4\x3c\x08\x85\xa8\x95\xbe\xb6\x19\x4d\x4e\x65\x53\x59\x88\xc1\x07\xbb\x63\xd3\x1d\xc1\x12\x8f\x5e\x35\xf8\xf2\xed\xfc\x1d\x41\xf6\xa9\xd3\x06\x97\x05\x52\x5b\x3f\x5e\xbf\xc0\xe9\x45\xf2\x18\x4f\xff\xe7\x89\xef\x53\x59\xd7\xbd\xea\x47\xa9\x89\x59\x5d\x82\x9f\xa7\xdd\x2f\x8c\xec\xc8\xc0\xe0\x43\x83\x52\xa9\x40\x31\x62\xfb\x9c\x06\x04\xdb\x53\xd4\x39\x64\x8f\xd7\x6e\x9a\x19\xf8\x36\x51\x83\x94\xe2\xf0\x03\xbc\xf7\x8e\x83\x37\x08\x4e\x5a\x7a\x47\x82\x56\x87\x87\x0c\x5a\x56\x8a\x62\x1f\x74\x47\xaa\xbb\x6d\xa4\xff\xc8\x4c\x08\x93\x91\x3d\x8d\xde\x28\x0a\x0d\xfe\xf4\x73\x00\x3a\xca\x79\x08\x8f\x56\x1a\x93\xb9\x87\xe4\xa3\x14\xa6\xdf\x0c\xe9\xa8\xec\xcc\xa4\xb0\x15\x75\xce\x69\xdf\xa7\x5f\x16\xa2\x9b\x99\xbd\xdb\x1a\x8a\x73\x67\x35\x3f\x30\x1d\x3b\xe8\xd8\x55\x53\xd0\x56\x86\x1b\xb6\xe7\xec\x17\xf5\x3d\xe9\x0e\xa8\x53\xb1\x6d\x83\xee\xd8\x3c\xf7\x4f\x37\x6a\xf0\x9e\xd3\xf6\x96\xff\x84\x6f\xf7\xcf\xfe\xc9\x96\x94\x3f\xd1\xbe\x2c\x7f\x02\x00\x00\xff\xff\xf8\x66\xc5\x56\x6c\x03\x00\x00")

func templatesHtmlInvite_requestHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_requestHtml,
		"templates/html/invite_request.html",
	)
}

func templatesHtmlInvite_requestHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_requestHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_request.html", size: 876, mode: os.FileMode(420), modTime: time.Unix(1569779855, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_request_emailHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4d\x4b\xf4\x30\x14\x85\xf7\xf9\x15\x87\xd2\xe5\x90\xee\x5f\xd2\xbc\x88\x9b\x11\x44\x44\x71\x3d\x84\xf6\x76\x7a\x21\x93\xd4\x34\x15\x24\xe4\xbf\x4b\x32\xf5\x03\x74\x57\x6e\xcf\xbd\xcf\x93\x93\x12\x46\x9a\xd8\x11\x1a\x76\x6f\x1c\xe9\x14\xe8\x75\xa3\x35\x9e\xe8\x62\xd8\x36\xc8\x59\xa8\x45\x1f\xc9\x5a\x7f\x50\xdd\xa2\x85\x38\x52\x20\x98\x40\x88\x33\xa1\x2e\x99\xc8\xde\x61\xf0\x23\xad\x78\xf7\x1b\xf6\x13\x34\x62\xf2\xa1\xc6\x54\xf9\xa9\x53\x82\x7c\xe6\x48\x0f\xe6\x42\xc8\x59\x75\x75\x8a\x02\x62\x77\x86\xe5\x35\x4a\x21\xd4\x66\xb5\x00\x80\x94\x10\x8c\x3b\x13\x5a\x3e\xa0\xbd\xea\xe1\x5f\x0f\x79\x57\x3f\xd7\xe2\x56\x72\xca\xb2\x56\x06\x73\xa0\xa9\x6f\x52\x42\x41\xbc\x3c\xdd\xa3\x95\x8f\x26\xce\xeb\x1e\xbf\x19\x06\x5a\x22\x72\xfe\xbf\x3f\xb4\xc0\xfb\x94\x3e\x2f\xcb\x5b\x3f\x16\xab\x46\xff\x9e\xa9\xce\x68\xd5\x59\xfe\xf2\x22\x37\xd6\x66\xba\xe2\x5a\x0a\x92\x52\xfe\x20\xff\x0d\xbe\xd6\xf7\xbd\xfd\x11\x00\x00\xff\xff\x8b\xdd\x7a\x64\x7c\x01\x00\x00")

func templatesHtmlInvite_request_emailHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_request_emailHtml,
		"templates/html/invite_request_email.html",
	)
}

func templatesHtmlInvite_request_emailHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_request_emailHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_request_email.html", size: 380, mode: os.FileMode(420), modTime: time.Unix(1569781301, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_request_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xb1\x6e\x84\x30\x10\x44\xeb\xf0\x15\x13\x37\xa9\x38\xa4\xab\x09\x3f\x91\x22\x25\x72\xec\x25\xac\x64\xbc\xc4\x5e\x88\x4e\x88\x7f\x8f\xe0\x1c\xe9\x14\xa5\xb1\x2d\xcf\xec\xec\xe8\x6d\x1b\x3c\x0d\x1c\x09\x86\xe3\xca\x4a\x7d\xa2\xaf\x85\xb2\xf6\x79\x71\x8e\x72\x36\xfb\x5e\x6d\x1b\x94\xa6\x39\x58\x25\x18\x27\xd3\x24\xb1\x1f\xc9\x7a\x4a\x06\x17\xec\x7b\x55\xb5\x9e\x57\xb8\x60\x73\x7e\x35\xce\x26\x6f\xba\x0a\x00\xda\xf1\xfa\xf8\x5b\x97\xa1\xee\xed\x9e\xfd\xdc\x36\xe3\xb5\x38\xff\x04\xd4\x1f\xe2\x6f\xa6\xab\x9e\x1e\x05\x1b\x28\x29\xce\xb3\xfe\xad\x87\x24\x81\x8a\x74\xf8\xcf\xb0\xb9\x7b\xa7\x97\x95\x90\x29\x2a\x6e\xb2\xc0\x46\xd0\x64\x39\xe0\x9b\x75\x04\xc7\xac\x69\x71\xca\x12\x33\x06\x49\x70\x32\xcd\x81\x94\xe3\x27\x74\x24\x9c\x24\xec\x21\x63\x4e\x72\xac\xb9\xb4\xcd\x7c\x94\x69\x3c\xaf\xa5\xf0\xfd\x59\xae\x7f\x11\x0d\x22\x4a\xa9\x00\xa4\xe8\x0f\x52\x3f\x01\x00\x00\xff\xff\x63\x7c\x4b\xdd\x70\x01\x00\x00")

func templatesHtmlInvite_request_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_request_successHtml,
		"templates/html/invite_request_success.html",
	)
}

func templatesHtmlInvite_request_successHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_request_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_request_success.html", size: 368, mode: os.FileMode(420), modTime: time.Unix(1569771967, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_subscribeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x41\x6b\xdc\x3a\x10\xc7\xcf\xeb\x4f\x31\xe8\x92\xe4\xb0\x36\xe4\xac\x35\x3c\x1e\x81\xf7\xa0\xb4\xa1\x69\x09\x3d\x05\xd9\x9a\x5d\x8b\x4a\x1a\x23\x8f\x37\x35\xc6\xdf\xbd\x48\x96\x83\xdb\xe4\x62\x6c\x59\xf3\x9b\xff\xfc\x47\xa3\x79\x06\x8d\x67\xe3\x11\x84\xf1\x57\xc3\xf8\x32\x8c\xcd\xd0\x06\xd3\xa0\x58\x96\x62\x9e\x19\x5d\x6f\x15\x23\x88\x96\x9c\x23\xff\xd2\xa1\xd2\x18\x04\x94\xb0\x2c\x45\x21\xb5\xb9\x42\x6b\xd5\x30\x9c\x44\xab\x82\x16\x75\x01\x00\x20\xbb\xfb\xfd\xea\x31\x07\xd5\x4f\x1b\x1c\x98\x80\x3b\x04\xd9\x92\xc6\x7a\x9e\xa1\x7c\x32\x8c\x9f\x95\x43\x58\x16\x59\xa5\x55\x70\xca\x58\xe3\x2f\x60\xcd\xc0\xb2\xea\xee\x33\xfb\xaf\x94\xc7\x86\xf4\x24\xea\xa2\x38\xcc\x33\x98\x33\x94\x0f\x21\x50\x48\xea\x0e\xfb\xbd\xca\x62\x60\x48\xcf\xa3\x56\xfe\x12\x8b\x08\x64\x31\xff\x11\x75\x71\x88\xf8\xa8\xe5\x8d\x70\x90\x95\x36\xd7\x3a\xa1\xd1\xeb\xb4\x54\x1c\xe4\x99\x82\xdb\xb0\xf1\x5d\x80\x43\xee\x48\x9f\xc4\xe3\x97\xa7\x6f\x02\x54\xcb\x86\xfc\x49\xcc\x33\xc4\xb2\xbe\x7f\xfd\x04\xe5\xa3\xe2\x6e\x28\xff\x4f\x26\xff\xd3\xb6\xd8\x33\x2c\xcb\x96\x54\x1a\xdf\x8f\x0c\x3c\xf5\x78\x12\x9d\xd1\x1a\xbd\x00\xaf\x1c\x9e\xb6\xb6\x44\x47\x04\x5c\x95\x1d\x31\x71\x33\xe9\x5f\xd2\xd1\x31\x01\x55\x26\x65\xde\xae\xee\x28\xf0\x78\x09\x34\xf6\x31\xdb\x41\x5a\xd5\xa0\x85\x33\x85\x93\x50\x5a\x07\x1c\x06\x51\x3f\x44\xab\x21\x7f\xca\x2a\x6d\x49\x9b\xf7\xba\x30\x6e\x12\x7f\x60\x5b\xf2\x1c\xc8\x6e\x5a\x37\x1e\x18\xbd\xfb\x50\xc1\xa8\xa3\xc6\xb5\xf1\xba\x99\x32\xe9\x3f\xb4\xbd\x80\xde\xaa\x16\x3b\xb2\x1a\xc3\x49\xfc\xa0\x31\x00\xee\xb5\xac\x92\x07\xa7\xac\x4d\xd0\x5d\xe4\x5e\x07\xe3\x2f\x86\xf8\x38\xba\x91\x51\x8b\xfa\x19\xc1\x23\x6a\x98\xde\x11\xe3\xc9\x1b\x62\x2f\x27\x1a\xd7\x3f\x25\x3c\x23\x68\xf2\x37\xbc\xc6\xdc\x52\x80\x57\xe5\xf9\xee\xa3\xe8\x33\x05\x50\x7e\xe2\x2e\x1e\x4c\xb4\x03\xc2\xad\x35\x3f\x11\x2e\xe6\x1a\x57\x0c\x47\xbe\x02\xee\x4c\xd0\xd0\xab\xc0\xd3\x5d\x29\xab\x54\xc0\xd6\xeb\x7c\xa4\x76\xdd\x6a\x46\x66\xf2\xd9\xe6\x61\x6c\x9c\xe1\xb7\xfa\x1a\xf6\xd0\xb0\x3f\xf6\xc1\x38\x15\xa6\x34\x43\xce\xb0\xac\xd6\xa0\x37\x90\xac\xa2\x13\x79\x44\xd6\x14\xe9\xc7\x87\x23\x73\x26\xe2\x38\x8f\xc5\x41\xf6\xf5\x73\x87\x3e\xb9\xb1\x66\x8e\xda\x53\x9d\x0e\x5e\xf1\xc6\xda\xd5\x2d\x05\x2d\xf9\xb3\x09\x4e\xc5\xa3\x9d\x4d\xc9\x43\xbc\x79\x33\xd1\x78\x73\x45\x40\xcf\x18\x50\x83\x6a\xe8\x9a\x06\xbd\x25\xd7\x5b\x64\x4c\x9b\xf3\xfd\xd2\x27\x4c\x1f\xa8\xc5\x61\x28\x65\xd5\xbf\x57\x9e\xdf\x3f\xba\x84\xb2\xfe\x74\x43\x6d\x83\xf9\x3b\x00\x00\xff\xff\x33\x57\x82\xdb\xcb\x04\x00\x00")

func templatesHtmlInvite_subscribeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_subscribeHtml,
		"templates/html/invite_subscribe.html",
	)
}

func templatesHtmlInvite_subscribeHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_subscribeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_subscribe.html", size: 1227, mode: os.FileMode(420), modTime: time.Unix(1569779984, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_subscribe_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x6b\xc3\x30\x0c\x85\xcf\xcb\xaf\x78\xcb\x65\xa7\xb6\xd0\x73\x96\x3f\xb1\xc3\xd8\xa9\x38\xb6\x52\x1b\x12\x2b\x48\x4a\x46\x09\xf9\xef\x23\xad\x07\x65\xec\x62\x0b\x3d\xe9\xa1\xf7\xad\x2b\x02\xf5\x29\x13\xea\x94\x97\x64\x74\xd1\xb9\x53\x2f\xa9\xdb\x2b\xef\x49\xb5\xde\xb6\x6a\x5d\x61\x34\x4e\x83\x33\x42\xed\x79\x1c\x39\x5f\x22\xb9\x40\x52\xe3\x88\x6d\xab\xaa\x26\xa4\x05\x7e\x70\xaa\xef\xb5\x77\x12\xea\xb6\x02\x80\x26\x9e\x9f\xbb\x87\xb2\xd4\x7e\x3c\xbc\x5f\x9b\x53\x3c\x97\xc9\x3f\x06\x87\x8e\xc3\xad\x6e\xab\x97\x67\xc1\x0d\x24\x86\xfb\x7b\xf8\x3d\x0f\xc2\x03\x15\x69\x9f\xbf\x9b\x4d\xed\x17\xcf\x02\x1a\x5d\x1a\xe0\x42\x10\x52\x45\x74\x8a\x8e\x28\x43\xe8\x9a\xd4\x48\x28\x1c\xf1\x49\x6f\x0b\x41\x29\x1b\x6e\x3c\xc3\xc1\x73\xee\x93\x8c\xce\x12\xe7\x62\x60\xd1\x19\xbe\x93\x45\xa4\xac\x26\xb3\xdf\x35\x45\xcf\x02\xcf\xe3\x34\x90\xa5\x7c\x85\x45\x42\xa1\x37\xdd\x97\x27\xe1\xfd\xc2\x63\x73\x9a\xf6\x1c\xa7\x90\x96\x92\xf5\x51\x96\xef\x5f\xba\x3d\xb3\x91\x14\xf6\x94\xc3\x0e\xf9\x27\x00\x00\xff\xff\x58\xef\x8b\x2f\xad\x01\x00\x00")

func templatesHtmlInvite_subscribe_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_subscribe_successHtml,
		"templates/html/invite_subscribe_success.html",
	)
}

func templatesHtmlInvite_subscribe_successHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_subscribe_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_subscribe_success.html", size: 429, mode: os.FileMode(420), modTime: time.Unix(1569772003, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlSubscribeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x4f\x6f\x9c\x3c\x10\xc6\xcf\xcb\xa7\x18\xf9\x92\xe4\xb0\x20\xe5\xec\xe5\x16\xe9\x7d\xa5\xaa\x8d\x9a\x46\x51\x4f\x95\xc1\xc3\x62\xc5\xf6\xa0\x61\xd8\x16\x21\xbe\x7b\x65\x96\xfd\x93\x66\x2f\x08\xc6\x33\x3f\x3f\x63\x9e\xf1\x34\x81\xc5\xc6\x45\x04\xd5\x0f\x55\x5f\xb3\xab\x50\xcd\x73\x36\x4d\x82\xa1\xf3\x46\x10\x54\x4d\x21\x50\xfc\xd5\xa2\xb1\xc8\x0a\x72\x98\xe7\x2c\xd3\xd6\x1d\xa0\xf6\xa6\xef\x77\xaa\x36\x6c\x55\x99\x01\x00\xe8\xf6\xf1\x3a\xba\x5d\x8b\xca\x97\x13\x1c\x84\x40\x5a\x04\x5d\x93\xc5\x72\x9a\x20\x7f\x71\x82\x5f\x4d\x40\x98\x67\x5d\x2c\x51\x08\xc6\x79\x17\xf7\xe0\x5d\x2f\xba\x68\x1f\x57\xf6\x3f\x5b\x6e\x2b\xb2\xa3\x2a\xb3\x6c\x33\x4d\xe0\x1a\xc8\x9f\x98\x89\x17\x75\x9b\xeb\x5c\xe3\x91\x05\x96\xe7\xd6\x9a\xb8\x4f\x4d\x30\x79\x5c\x57\x54\x99\x6d\x12\x3e\x69\x39\x13\x36\xba\xb0\xee\x50\x2e\x68\x8c\x76\x09\x65\x1b\xdd\x10\x87\x13\x36\xbd\x2b\x08\x28\x2d\xd9\x9d\x7a\xfe\xf6\xf2\x43\x81\xa9\xc5\x51\xdc\xa9\x69\x82\xd4\xd6\xeb\xf7\x2f\x90\x3f\x1b\x69\xfb\xfc\x72\x00\xf3\x7c\xda\xf1\xa3\xcc\xc4\xdb\xee\x99\x86\xee\xb4\xae\xbd\xa9\xd0\x43\x43\xbc\x53\xc6\x5a\xc6\xbe\x57\xe5\x53\x3a\x1c\x58\x3f\x75\xb1\xa4\x9c\xf2\x5d\xec\x06\x01\x19\x3b\xdc\x29\x4c\x79\xea\x03\xbc\xa6\x28\x4c\x5e\x41\x34\x01\x2f\x48\x70\xf6\xea\xc3\xb0\x33\x5b\x8b\x47\xb1\xb6\x1a\x57\xd2\x7f\xe8\x3b\x05\x9d\x37\x35\xb6\xe4\x2d\xf2\x4e\xfd\xa4\x81\x01\xaf\xe5\x9c\x85\xf7\xc1\x78\xbf\x70\xaf\x8a\xaf\xa5\x08\xfe\x11\x48\x8f\x6d\x18\x04\xad\x2a\xdf\x10\x22\xa2\x85\xf1\x13\x34\x39\xa6\x4f\xff\x60\xa4\xe1\xb8\x92\xc3\x1b\x82\xa5\x78\x27\xc7\x9a\x7b\x62\xf8\x6d\xa2\x3c\xdc\xaa\x6e\x88\xc1\xc4\x51\xda\x64\x28\xf4\x3d\xc2\xbd\x77\xef\x08\x7b\x77\x48\x11\x27\x89\x6f\x40\x5a\xc7\x16\x3a\xc3\x32\x3e\xe4\xba\x58\x1a\x28\x2f\x36\xc8\x36\xba\x1a\x44\x28\xae\xa7\xdb\x0f\x55\x70\x72\xee\xa9\x92\x08\x95\xc4\x6d\xc7\x2e\x18\x1e\x17\xbf\x07\x27\xba\x38\x16\x1d\x01\x45\xea\x7c\xb5\xf2\x11\xbb\x98\xe0\xa6\xb5\x1b\x22\x49\x73\x93\x6d\x74\x57\xfe\xdf\xa4\xc6\xee\x18\xc1\x13\xbd\x27\xd5\x42\xa0\x31\x94\x43\x3c\x0f\xad\x2e\x30\x94\xd0\x30\x85\x65\xbc\xae\x27\x28\x05\x22\x68\x03\x2d\x63\x73\xcb\x9b\xaf\x17\xcc\xe2\xce\x34\xb4\x40\x11\xe8\x80\x0c\x2d\x32\xea\xc2\x94\xb9\x2e\xba\xcf\xe2\xd7\xf7\x5b\xf7\xc5\xda\xc2\x72\x99\x9c\x66\xe8\x6f\x00\x00\x00\xff\xff\xc8\x83\x4b\xd6\x6f\x04\x00\x00")

func templatesHtmlSubscribeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlSubscribeHtml,
		"templates/html/subscribe.html",
	)
}

func templatesHtmlSubscribeHtml() (*asset, error) {
	bytes, err := templatesHtmlSubscribeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/subscribe.html", size: 1135, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlSubscribe_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xc1\x8a\xe3\x30\x0c\x86\xcf\x9b\xa7\xf8\xd7\x97\x3d\xb5\x85\x9e\xb3\x79\x89\x39\x0c\x73\x2a\x8e\xad\xd4\x86\xc4\x0a\x92\xd2\xa1\x84\xbc\xfb\x90\xd6\x03\x65\x98\x8b\x6d\xfc\x4b\x1f\xd2\xb7\xae\x88\x34\xe4\x42\x70\xba\xf4\x1a\x24\xf7\x74\xd1\x25\x04\x52\x75\xdb\xd6\xac\x2b\x8c\xa6\x79\xf4\x46\x70\x81\xa7\x89\xcb\x25\x91\x8f\x24\x0e\x47\x6c\x5b\xd3\xb4\x31\xdf\x10\x46\xaf\xfa\xdf\x05\x2f\xd1\x75\x0d\x00\xb4\xe9\xfc\xfa\x7b\xa8\x4d\xdd\xdb\x93\xfd\xb7\x3d\xa5\x73\xad\xfc\x01\x38\xf4\x1c\xef\xae\x6b\xfe\xbc\x06\x7e\x24\x31\x3c\xce\xc3\xf7\x78\x10\x1e\xa9\x46\x7b\xfd\x03\x36\x77\x1f\xbc\x08\x68\xf2\x79\x84\x8f\x51\x48\x15\xc9\x2b\x7a\xa2\x02\xa1\x6b\x56\x23\xa1\x78\xc4\x3b\xfd\xbb\x11\x94\x8a\xe1\xce\x0b\x3c\x02\x97\x21\xcb\xe4\x2d\x73\xa9\x00\x4b\xde\xf0\x99\x2d\x21\x17\x35\x59\xc2\x9e\x29\x06\x16\x04\x9e\xe6\x91\x2c\x97\x2b\x2c\x11\xaa\xbd\xf9\xd1\x3c\x0b\xef\x13\x1e\xdb\xd3\xbc\xef\x71\x8a\xf9\x56\x77\x7d\x3e\xeb\xf5\xab\xdd\x81\xd9\x48\xaa\x7b\x2a\x71\x97\xfc\x15\x00\x00\xff\xff\xd7\xe7\x96\x41\xa6\x01\x00\x00")

func templatesHtmlSubscribe_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlSubscribe_successHtml,
		"templates/html/subscribe_success.html",
	)
}

func templatesHtmlSubscribe_successHtml() (*asset, error) {
	bytes, err := templatesHtmlSubscribe_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/subscribe_success.html", size: 422, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlUnsubscribeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xc1\x8e\x9b\x30\x10\x86\xcf\xf0\x14\x23\x5f\x7a\x02\xa4\x3d\x3b\xbe\xad\xd4\x4a\x55\xbb\x6a\x76\x0f\x3d\x55\x06\x0f\x8b\x55\xdb\x83\xcc\x90\x36\x42\xbc\x7b\x65\x87\x64\x49\x95\x8b\xc1\xf6\xf8\x9b\x7f\x86\xdf\x2c\x0b\x18\xec\x6d\x40\x10\x73\x98\xe6\x76\xea\xa2\x6d\x51\xac\x6b\xb9\x2c\x8c\x7e\x74\x9a\x11\x44\x47\xde\x53\xf8\x35\xa0\x36\x18\x05\xd4\xb0\xae\x65\x29\x8d\x3d\x41\xe7\xf4\x34\x1d\x44\xa7\xa3\x11\xaa\x04\x00\x90\xc3\xd3\x7e\xb5\xda\x0e\xa9\xb7\x0f\x3c\xf4\x91\x3c\xf0\x80\x20\x3b\x32\xa8\x96\x05\xea\xa3\x65\xfc\xa6\x3d\xc2\xba\xca\x26\xaf\x82\xd7\xd6\xd9\xf0\x0e\xce\x4e\x2c\x9b\xe1\x69\xe3\xff\x97\xb6\x6a\xc9\x9c\x85\x2a\xcb\x62\x59\xc0\xf6\x50\x3f\xc7\x48\x31\x2b\x2c\xf6\xb1\xda\x61\x64\xc8\x63\x65\x74\x78\x4f\x85\x44\x72\xb8\xed\x08\x55\x16\x09\x9f\xb4\xdc\x08\x85\x6c\x8c\x3d\xa9\x8c\xc6\x60\xd2\x52\x8a\x29\x0b\xd9\x53\xf4\x57\x72\x7a\x17\xe0\x91\x07\x32\x07\xf1\xf2\xfd\xf8\x2a\x40\x77\x6c\x29\x1c\xc4\xb2\x40\xaa\xec\xed\xc7\x57\xa8\x5f\x34\x0f\x53\xbd\xef\xc3\xba\x5e\xd3\x5e\xc6\xbd\xde\x44\xad\xde\x23\xcd\x63\x8a\x29\xa4\xd3\x2d\x3a\xe8\x29\x1e\x84\x36\x26\xe2\x34\x09\xf5\x9c\x5a\x04\xdb\x54\x36\x39\x24\x07\xdb\x30\xce\x0c\x7c\x1e\xf1\x20\x30\x05\x89\x3b\x6c\x47\x81\x23\x39\x01\x41\x7b\xfc\xe0\x81\x35\xbb\x89\x8e\x56\x57\x06\x2f\x52\x4d\x7b\xde\x48\x9f\xd1\x8d\x02\x46\xa7\x3b\x1c\xc8\x19\x8c\x07\xf1\x93\xe6\x08\xb8\xd7\x72\x91\x3c\x79\xed\x5c\x86\xee\x4e\xee\x75\x30\xfe\x65\x48\x43\xe5\x67\x46\x23\xd4\xeb\x60\x27\xb0\x53\xf6\xc6\x1d\x10\xce\x34\xc3\xad\x71\x06\x98\x72\xcc\xde\x22\xf0\xc7\xf2\x50\xcb\x26\x67\xdd\xda\x7a\xfd\x7e\xbb\x16\xb7\x33\x33\x85\xad\x37\xd3\xdc\x7a\xcb\x37\x51\x2d\x07\x68\x39\x54\x63\xb4\x5e\xc7\xb3\x50\xc7\xbc\x2f\x9b\xcb\xa1\x1b\x48\x36\x49\xfe\xe6\xc7\x4b\x8a\xbc\xf1\xd0\x9f\x3d\x11\xa7\x0b\x50\x16\x72\x54\x5f\xfa\x54\xc9\xa7\x88\xe0\x88\x7e\x27\xe9\x4c\x20\xd1\xab\x5b\x6d\xb2\x41\xaf\x1e\xd6\xc7\x03\x06\x90\x1a\x86\x88\xfd\x23\x67\x1d\xef\x7c\x95\xee\x1d\x50\x00\x3a\x61\x84\x01\x23\xca\x46\xab\x5a\x36\xe3\x9d\xec\xed\xf1\xe8\xb6\x6f\xba\xf3\xaf\xe0\xea\xfe\x7f\x01\x00\x00\xff\xff\x1c\x5a\x0d\xd7\x2f\x04\x00\x00")

func templatesHtmlUnsubscribeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlUnsubscribeHtml,
		"templates/html/unsubscribe.html",
	)
}

func templatesHtmlUnsubscribeHtml() (*asset, error) {
	bytes, err := templatesHtmlUnsubscribeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/unsubscribe.html", size: 1071, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlUnsubscribe_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xc1\x6e\xf3\x20\x10\x84\xcf\xbf\x9f\x62\x7e\x2e\x3d\x25\x91\x72\x76\xfd\x12\x3d\xf4\x18\x11\x58\x17\x24\x60\x11\xac\x53\x45\xc8\xef\x5e\xd9\xa1\x55\xd4\x5e\x00\x31\x3b\xc3\xf0\xb5\x06\x4b\xb3\x4f\x04\xb5\xa4\xba\x5c\xab\x29\xfe\x4a\x97\xba\x18\x43\xb5\xaa\x75\x1d\x5a\x83\x50\xcc\x41\x0b\x41\x19\x8e\x91\xd3\xc5\x91\xb6\x54\x14\x70\xc4\xba\x0e\xc3\x68\xfd\x0d\x26\xe8\x5a\x5f\x95\xd1\xc5\xaa\x69\x00\x80\xd1\x9d\x9f\x6f\x0f\xdd\x35\xbd\x3d\xc2\xff\x8f\x27\x77\xee\x93\xbf\x02\x0e\x57\xb6\x77\x35\x0d\xff\x9e\x05\x1d\xa8\x08\xf6\xf5\xf0\xdd\x0f\x85\x03\x75\x69\x9b\xdf\xc3\xf2\xf4\x4e\x2f\x37\x42\xa5\x24\xb8\xf3\x02\x0d\xc3\x69\xf6\x25\x6a\xf1\x9c\x40\x51\xfb\x00\x71\x5a\xf0\xe9\xc5\xc1\xa7\x2a\x65\x31\x9b\x56\x31\x73\x81\xe1\x98\x03\x89\x4f\x1f\x10\x47\xf8\x01\x93\x77\x7b\x2e\xbc\xbd\x7d\x1c\x4f\x79\x6b\x78\xb2\xfe\xd6\x7f\xf1\x38\xf6\x6d\x68\xed\x0f\xb7\x99\x59\xa8\x74\xaa\x94\xec\x46\xef\x2b\x00\x00\xff\xff\xb0\x69\x7a\x0d\x82\x01\x00\x00")

func templatesHtmlUnsubscribe_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlUnsubscribe_successHtml,
		"templates/html/unsubscribe_success.html",
	)
}

func templatesHtmlUnsubscribe_successHtml() (*asset, error) {
	bytes, err := templatesHtmlUnsubscribe_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/unsubscribe_success.html", size: 386, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/html/common_footer.html":            templatesHtmlCommon_footerHtml,
	"templates/html/common_header.html":            templatesHtmlCommon_headerHtml,
	"templates/html/confirm.html":                  templatesHtmlConfirmHtml,
	"templates/html/confirm_action.html":           templatesHtmlConfirm_actionHtml,
	"templates/html/confirm_email.html":            templatesHtmlConfirm_emailHtml,
	"templates/html/confirm_success.html":          templatesHtmlConfirm_successHtml,
	"templates/html/crumb_error.html":              templatesHtmlCrumb_errorHtml,
	"templates/html/index.html":                    templatesHtmlIndexHtml,
	"templates/html/invite_code.html":              templatesHtmlInvite_codeHtml,
	"templates/html/invite_request.html":           templatesHtmlInvite_requestHtml,
	"templates/html/invite_request_email.html":     templatesHtmlInvite_request_emailHtml,
	"templates/html/invite_request_success.html":   templatesHtmlInvite_request_successHtml,
	"templates/html/invite_subscribe.html":         templatesHtmlInvite_subscribeHtml,
	"templates/html/invite_subscribe_success.html": templatesHtmlInvite_subscribe_successHtml,
	"templates/html/subscribe.html":                templatesHtmlSubscribeHtml,
	"templates/html/subscribe_success.html":        templatesHtmlSubscribe_successHtml,
	"templates/html/unsubscribe.html":              templatesHtmlUnsubscribeHtml,
	"templates/html/unsubscribe_success.html":      templatesHtmlUnsubscribe_successHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"html": &bintree{nil, map[string]*bintree{
			"common_footer.html":            &bintree{templatesHtmlCommon_footerHtml, map[string]*bintree{}},
			"common_header.html":            &bintree{templatesHtmlCommon_headerHtml, map[string]*bintree{}},
			"confirm.html":                  &bintree{templatesHtmlConfirmHtml, map[string]*bintree{}},
			"confirm_action.html":           &bintree{templatesHtmlConfirm_actionHtml, map[string]*bintree{}},
			"confirm_email.html":            &bintree{templatesHtmlConfirm_emailHtml, map[string]*bintree{}},
			"confirm_success.html":          &bintree{templatesHtmlConfirm_successHtml, map[string]*bintree{}},
			"crumb_error.html":              &bintree{templatesHtmlCrumb_errorHtml, map[string]*bintree{}},
			"index.html":                    &bintree{templatesHtmlIndexHtml, map[string]*bintree{}},
			"invite_code.html":              &bintree{templatesHtmlInvite_codeHtml, map[string]*bintree{}},
			"invite_request.html":           &bintree{templatesHtmlInvite_requestHtml, map[string]*bintree{}},
			"invite_request_email.html":     &bintree{templatesHtmlInvite_request_emailHtml, map[string]*bintree{}},
			"invite_request_success.html":   &bintree{templatesHtmlInvite_request_successHtml, map[string]*bintree{}},
			"invite_subscribe.html":         &bintree{templatesHtmlInvite_subscribeHtml, map[string]*bintree{}},
			"invite_subscribe_success.html": &bintree{templatesHtmlInvite_subscribe_successHtml, map[string]*bintree{}},
			"subscribe.html":                &bintree{templatesHtmlSubscribeHtml, map[string]*bintree{}},
			"subscribe_success.html":        &bintree{templatesHtmlSubscribe_successHtml, map[string]*bintree{}},
			"unsubscribe.html":              &bintree{templatesHtmlUnsubscribeHtml, map[string]*bintree{}},
			"unsubscribe_success.html":      &bintree{templatesHtmlUnsubscribe_successHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

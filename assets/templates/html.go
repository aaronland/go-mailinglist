// Code generated by go-bindata.
// sources:
// templates/html/common_footer.html
// templates/html/common_header.html
// templates/html/confirm.html
// templates/html/confirm_action.html
// templates/html/confirm_email.html
// templates/html/confirm_success.html
// templates/html/crumb_error.html
// templates/html/index.html
// templates/html/invite_accept.html
// templates/html/invite_code.html
// templates/html/invite_how_it_works.html
// templates/html/invite_request.html
// templates/html/invite_request_email.html
// templates/html/invite_request_success.html
// templates/html/subscribe.html
// templates/html/subscribe_success.html
// templates/html/unsubscribe.html
// templates/html/unsubscribe_success.html
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesHtmlCommon_footerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xce\xcf\xcd\xcd\xcf\x8b\x4f\xcb\xcf\x2f\x49\x2d\x52\xaa\xad\xe5\xe2\xe4\xb4\xd1\x4f\xc9\x2c\xb3\xe3\xe2\xb4\xd1\x4f\xca\x4f\xa9\xb4\xe3\xb2\xd1\xcf\x28\xc9\xcd\xb1\xe3\xaa\xae\x4e\xcd\x4b\xa9\xad\xe5\x02\x04\x00\x00\xff\xff\x51\x34\x73\xde\x3d\x00\x00\x00")

func templatesHtmlCommon_footerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlCommon_footerHtml,
		"templates/html/common_footer.html",
	)
}

func templatesHtmlCommon_footerHtml() (*asset, error) {
	bytes, err := templatesHtmlCommon_footerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/common_footer.html", size: 61, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlCommon_headerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\xb1\x52\xc3\x30\x0c\x86\xe7\xe4\x29\x84\x67\xdc\x1c\x1b\x83\x9d\x05\x18\x58\xa0\x77\xb0\x30\x71\x8a\xad\x36\xba\x4b\x9c\xe0\xa8\x69\xb9\x9c\xdf\x9d\x6b\x13\xa0\x85\x49\xb6\xfc\x5b\xdf\xa7\x69\xf2\xb4\xe1\x40\xa0\x5c\xd7\xb6\x5d\x78\xaf\x09\x3d\x45\x95\x92\xb9\xba\x7f\xbe\x7b\x7d\x5b\x3f\x40\x2d\x6d\x53\xe6\x66\x2e\x99\x39\x26\xca\x3c\xcb\x4c\x4b\x82\xe0\x6a\x8c\x03\x89\x55\x3b\xd9\xe8\x5b\x05\xc5\xef\x53\x2d\xd2\x6b\xfa\xd8\xf1\x68\xd5\x41\xef\x50\xbb\xae\xed\x51\xb8\x6a\x48\x81\xeb\x82\x50\x10\xab\x98\x2c\xf9\x2d\x5d\xfc\x0c\xd8\x92\x55\x23\xd3\xbe\xef\xa2\x9c\x85\xf7\xec\xa5\xb6\x9e\x46\x76\xa4\x4f\x97\x6b\xe0\xc0\xc2\xd8\xe8\xc1\x61\x43\xf6\xe6\x7b\x90\xb0\x34\x54\x4e\x13\xac\x5e\x58\xe8\x09\x5b\x82\x94\x4c\x31\xb7\xff\x90\x3c\x0d\x2e\x72\x2f\xdc\x85\x33\xd8\x3c\xc9\x14\xcb\xc2\xa6\xea\xfc\x67\x99\xe7\x19\x00\x80\x09\x38\x82\x6b\x70\x18\xac\x0a\x38\x56\x18\x61\x2e\x9a\x0e\x3d\x06\xaf\x9b\xad\x3a\x51\xf0\x32\xa5\xab\x88\xc1\x2b\xa8\x23\x6d\xac\x3a\xda\xad\x51\xea\x61\xf5\x18\x3c\x1d\x20\x25\xf5\xdf\x18\xcb\x05\x59\x04\x1c\x97\xf3\xd2\xf1\xfc\x23\x71\xb4\x46\x0e\x14\x55\x99\x4f\x13\x05\x9f\x52\xfe\x15\x00\x00\xff\xff\xa7\x08\x14\x24\xdd\x01\x00\x00")

func templatesHtmlCommon_headerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlCommon_headerHtml,
		"templates/html/common_header.html",
	)
}

func templatesHtmlCommon_headerHtml() (*asset, error) {
	bytes, err := templatesHtmlCommon_headerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/common_header.html", size: 477, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirmHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xcf\x8b\x9d\x30\x10\xc7\xcf\xfa\x57\x0c\x73\x57\x61\xcf\xd1\x4b\xe9\xad\xb4\x4b\x5f\x7b\xe8\xa9\x44\x33\xae\x01\x93\x91\x31\x2e\x3c\x82\xff\x7b\x49\xd4\xc7\xbe\xa5\x97\x30\xcc\x8f\xcf\xf7\x9b\x49\x62\x04\x43\xa3\xf5\x04\x38\xb0\x1f\xad\x38\xdc\xf7\x32\xc6\x40\x6e\x99\x75\xc8\x69\xe7\xd8\xff\x9d\x48\x1b\x12\x84\x1a\xf6\xbd\x2c\x95\xb1\xef\x30\xcc\x7a\x5d\x5b\x1c\xb4\x18\xec\x4a\x00\x00\x35\xbd\x7c\xcc\x56\xe7\x50\xa7\x06\x36\xd4\xc5\x08\xf5\xcd\x06\xfa\xae\x1d\xc1\xbe\xab\x26\x67\xe1\xcb\xa1\xab\x83\x65\x0f\xb7\x40\x8b\x6a\xa6\x97\x93\xf7\x49\xa6\xea\xd9\xdc\xb1\x2b\xcb\x22\x46\xb0\x23\xd4\x5f\x45\x58\xb2\xa3\xe2\x63\xaf\x9e\x49\x02\xe4\xb3\x32\xda\xbf\x25\xe3\xc2\x33\x9d\x15\xec\xca\x22\xe1\x93\xa1\x07\xa1\x50\x8d\xb1\xef\x5d\x46\x93\x37\x39\x55\x16\x6a\x64\x71\x17\x36\xc5\x08\x8e\xc2\xc4\xa6\xc5\xd7\x1f\xb7\x5f\x08\x7a\x48\xbe\x5b\x8c\x11\xd2\xdd\x7e\xff\xfc\x06\xf5\xab\x0e\xd3\x5a\x9f\xf7\x82\x7d\xbf\xf4\x9e\x4d\x26\x5a\xf5\x26\xbc\x2d\x57\x5d\xcd\xba\xa7\x19\x46\x96\x16\xb5\x31\x42\xeb\x8a\xdd\xd3\x7a\xd2\xc6\x54\x93\xdb\xae\x19\xeb\x97\x2d\x40\xb8\x2f\xd4\x62\x2a\xe3\x13\x7f\x60\x1f\x84\x67\x04\xaf\xdd\xa3\xc1\x9a\x2b\x5a\x66\x3d\xd0\xc4\xb3\x21\x69\xf1\x0f\x6f\x02\xc3\x67\xb9\x64\xee\x5a\x4d\x59\xa8\x7e\x0b\x81\xfd\xa9\xb7\x6e\xbd\xb3\xe1\xa1\xd8\x07\x0f\x7d\xf0\xd5\x22\xd6\x69\xb9\x63\x77\xcb\x75\xd5\x1c\x43\x07\xa0\x49\xbe\xce\xe7\x3d\xb0\x79\x35\x67\xfc\xbf\xaf\x37\x32\x07\x92\xe3\x5f\x5e\x4f\xf3\x2f\x00\x00\xff\xff\x60\x47\xaa\xa2\xb8\x02\x00\x00")

func templatesHtmlConfirmHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirmHtml,
		"templates/html/confirm.html",
	)
}

func templatesHtmlConfirmHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirmHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm.html", size: 696, mode: os.FileMode(420), modTime: time.Unix(1569942220, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirm_actionHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xcd\x8e\x9c\x3c\x10\x3c\xc3\x53\xb4\x7c\x07\xa4\x3d\xc3\x48\x9f\x56\xdf\x2d\x4a\x46\x99\xe4\xbc\x32\xb8\x59\xac\xd8\xee\x89\x69\x26\x19\x21\xde\x3d\xb2\x31\xec\x4f\x26\xd1\x4a\x89\x72\x19\xd9\xfd\x53\xd5\x54\xd7\x78\x9e\x41\x61\xaf\x1d\x82\xe8\xc8\xf5\xda\xdb\x07\xd9\xb1\x26\x27\x96\x25\x9f\x67\x46\x7b\x36\x92\x63\xd6\x5a\x72\x0f\x03\x4a\x85\x5e\x40\x09\xcb\x92\xe7\xb5\xd2\x17\xe8\x8c\x1c\xc7\x46\x74\xd2\x2b\x71\xc8\x01\x00\xea\xe1\xee\x79\xb4\x48\x4d\x87\x3c\x9b\x67\xd0\x3d\xe0\x57\x28\xff\x8b\x2c\x20\xc6\xa9\x1d\x3b\xaf\x5b\x14\x01\x31\x3b\x1a\x94\x23\x42\x9a\x05\x78\x90\x0c\x57\x9a\xe0\x9b\x1e\x07\x60\x82\xbd\x3c\x5c\x78\x40\xa8\x3b\x52\x78\x98\x67\x28\x4f\x9a\xf1\xbd\xb4\x08\xcb\x52\x57\x31\x0a\x56\x6a\xa3\xdd\x23\x18\x3d\x72\x8a\xc5\x19\xd0\x8c\xf8\x26\xba\xc9\x3d\x11\xf6\x9e\xec\x1f\x50\x3a\x15\x18\xa3\x3c\xd5\x70\xb7\x0a\xb5\x5e\x5f\x89\x58\xb4\xa4\xae\xe2\x90\x6f\x6a\x95\xff\x7b\x4f\x3e\xea\x9d\x3d\xaf\x95\x06\x3d\x43\xfc\x2d\x94\x74\x8f\x61\x2d\x9e\x0c\xa6\x4c\x90\x3b\xc0\x87\x39\x77\x84\xac\xae\x94\xbe\xbc\x12\x21\xcf\xea\x9e\xbc\xdd\x70\xc3\x59\x80\x45\x1e\x48\x35\xe2\xf8\xe1\xf4\x49\xc0\xea\x89\x46\xcc\x33\x84\x6f\xfe\xfc\xf1\x1d\x94\x47\xc9\xc3\x58\xde\x27\xe9\x96\x65\x23\xac\xb5\x3b\x4f\x0c\x7c\x3d\x63\x23\x06\xad\x14\x3a\x01\x4e\x5a\x6c\x44\x90\x43\xc0\x45\x9a\x09\x23\x56\x79\x4f\x2a\xcc\x20\xa0\x0a\xdf\xfb\x93\x1a\xd3\xc8\x64\x8b\x8e\x1c\x7b\x32\xb0\x5d\x07\xec\xbe\xb4\xf4\x3d\xf0\x65\x2f\xc8\xf6\xcc\x6d\x80\x22\xd6\x0a\xd0\xaa\xd9\xcc\xfe\x34\xd8\x7a\x8d\x90\x46\xb6\x68\x7e\x01\x11\x73\x02\x7a\xf2\x2f\x9b\x92\xd2\xbf\x37\x77\xac\xfa\x07\x0e\xdf\xa6\xd9\x37\xfc\x26\xe2\xbf\xe4\xf5\x9d\x7c\x35\x7c\x96\xd5\x55\x14\x6d\x73\x47\x32\x60\x38\x67\x29\xd4\x4e\xcc\xe4\xd2\x12\xc7\xa9\xb5\x9a\xf7\x15\xb6\xec\xa0\x65\x57\x9c\xbd\xb6\xd2\x5f\xc5\xe1\x14\xf3\x75\xb5\x36\x25\xa4\x60\xec\xe0\xdb\x1b\xff\xb5\x48\x17\x6b\xd2\xf9\xd6\xb3\xd6\x13\x31\xfa\xf5\xcd\xdb\xda\x7f\x04\x00\x00\xff\xff\x90\x23\x01\x0f\x1b\x05\x00\x00")

func templatesHtmlConfirm_actionHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirm_actionHtml,
		"templates/html/confirm_action.html",
	)
}

func templatesHtmlConfirm_actionHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirm_actionHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm_action.html", size: 1307, mode: os.FileMode(420), modTime: time.Unix(1569942249, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirm_emailHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\xcf\x6e\xdb\x3c\x10\xc4\xef\x7e\x8a\x81\x2f\xf9\x3e\x20\x50\xee\x81\xe2\x22\xc8\xa5\x05\x8a\xa2\xe8\x1f\xf4\x58\xd0\xe4\x48\x5a\x98\x22\x55\x92\x72\xea\x0a\x7a\xf7\x82\x92\xed\x38\xad\x1b\x04\xbe\xd9\xc6\x7a\xf6\x37\xb3\xc3\x61\x80\x61\x25\x8e\x58\x6a\xef\x2a\x09\xed\x77\xb6\x4a\xec\x12\xe3\xb8\x28\xbb\xd5\x5b\x5a\xeb\xaf\xcb\x9b\x6e\xb5\x58\x0c\x03\xa4\x02\x7f\xa0\xb8\xd7\x49\xbc\xc3\x32\xf6\xeb\xa8\x83\xac\x79\x18\xff\xc6\xab\x2d\x11\xa8\x29\x5b\x1a\x28\x38\x9f\xa4\x12\xad\xa6\xf9\xd4\xa8\x84\x9d\xef\xaf\x0c\xac\x6c\x88\xe4\x71\x54\xc8\x5f\x52\x43\x94\xda\x1b\xae\x86\x01\xc5\x67\x49\xfc\xa0\x5a\x62\x1c\xcb\x9b\xe9\x57\x64\x32\x71\x35\xac\xc4\x54\xe0\x8b\xc7\x9e\x39\x8b\x86\x83\x56\x37\xed\xea\x2c\x55\x24\xb6\x12\x25\x21\x35\x12\xf1\xc8\x75\xa7\x6a\xde\x4e\x66\x86\x01\xb4\x91\x97\x62\xf7\xee\x09\xbc\x0a\xbe\xbd\x08\xbd\xed\x2c\x13\xa7\xbf\x1e\xf5\xf6\xf0\xc1\x6b\xc6\xf8\x1a\x13\xce\x8c\xe3\x22\x7b\x38\x6e\xcf\xcb\xbf\x7e\x7a\x8f\xe2\xa3\x4a\x4d\x2c\x1e\xf6\x11\x1d\x51\xe6\x63\x96\xdd\xea\xde\x19\xd0\x25\x86\x59\x7a\x9f\xe5\xec\x39\x4f\xde\x1e\x27\x9f\x9c\x3d\x78\xc3\x33\x52\x73\x80\xca\x46\x9f\xd9\xb7\x62\x68\x66\xd1\x46\x39\xb3\x83\x15\xb7\xc9\xb1\x19\x8f\xb5\x4f\x0d\xc4\x41\x21\x8a\xab\x2d\xa1\xad\xe8\xcd\xc9\x2a\x85\x26\xb0\xba\x5b\xbe\xe4\xe4\x4d\xde\x7e\x77\xc2\xb3\x7c\xd1\xf8\x5f\xe3\xe5\x8d\x5a\xbd\xba\xd3\xef\xaa\x7c\x7c\x18\x31\xb9\x16\x50\x71\x73\xa6\xb8\x12\x9f\x5d\x18\xff\xad\xa9\x55\x1f\x79\x8d\xa8\x76\xd7\x88\xbe\xa5\x77\x9c\x3b\x17\xa5\x76\x34\xe8\x3b\xf4\x39\x83\xb9\xbc\xd3\xab\x83\x32\x26\x30\xc6\xff\x0f\x97\x37\x12\x03\x6b\x15\xf6\x69\xb6\x8c\x51\xd5\x2c\xce\x54\xf8\x3c\xe5\x99\x9e\xfe\x9b\xb4\xf2\x01\xfc\xa9\x72\x2d\xff\x20\x4e\x41\xf2\x41\x9f\xeb\x5d\x08\x0f\xe5\x0c\x1e\x09\xd5\x79\xeb\x6b\xf9\xc5\x69\x6f\x7e\x04\xe2\xb4\x77\x5b\x3a\xa1\xd3\x27\x1e\x9d\xc9\x16\x4f\x3e\xfe\x0e\x00\x00\xff\xff\xf8\xf0\x46\x4d\xb4\x04\x00\x00")

func templatesHtmlConfirm_emailHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirm_emailHtml,
		"templates/html/confirm_email.html",
	)
}

func templatesHtmlConfirm_emailHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirm_emailHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm_email.html", size: 1204, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlConfirm_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x6b\xdc\x30\x10\x3d\xdb\xbf\x62\xd0\xa5\x97\xae\x0d\x39\x2b\x86\x1e\x0a\x2d\x94\x52\x1a\xf6\xd0\x53\x90\xa5\xf1\x5a\x54\x1f\x8e\x24\x6f\x09\xc2\xff\xbd\x48\xd6\x3a\x6e\x36\x69\x68\x2f\xb6\x34\x5f\x6f\xde\x9b\x41\x31\x82\xc0\x41\x1a\x04\xc2\xad\x19\xa4\xd3\xf7\x7e\xe6\x1c\xbd\x27\xcb\x52\xc7\x18\x50\x4f\x8a\x85\xec\xd6\xda\x9a\xfb\x11\x99\x40\x47\xa0\x81\x65\xa9\xeb\x18\x41\x0e\xd0\x7c\x74\xce\xba\x6c\xa0\x42\x9e\x81\x2b\xe6\xfd\x2d\xe1\xcc\x09\xd2\xd5\x00\x00\x74\xbc\xd9\x5b\x0f\xa5\x4a\xf7\xc9\xe9\xf7\x10\x46\x74\x08\xbf\x98\x07\x06\x93\xb3\xbd\x42\x0d\xdc\xea\x49\x61\x90\xe6\x04\x8f\x76\x76\xe0\xf0\x61\x46\x1f\x68\x3b\xde\x94\x8a\xcf\x80\x0e\xbd\x15\x8f\xa4\xab\xab\xba\xda\xbb\x98\x42\x17\x20\x7f\x0f\x82\x99\x53\x6a\xdd\x59\x85\xc5\x93\x12\x52\xb5\x18\x77\x24\x2a\xda\x0a\x79\x2e\x30\xeb\xb1\xfc\x12\x5f\x54\x1e\xff\x87\x6a\x5d\xad\x62\xe1\x03\x34\x1f\x78\x90\xd6\x00\xf1\x73\xef\xb9\x93\x3d\x92\x8c\x7b\xb7\x5e\xa7\xec\x2c\x0a\x60\xce\xbb\x80\x56\x47\xe3\x5f\x0f\x32\x22\xc5\xac\x6d\xbf\xa5\xd3\xeb\x32\x5d\xe6\xff\x4c\xa7\x4d\xa8\xbf\x73\x48\x41\x3f\xd2\xc4\x5e\xec\x13\x82\x4d\xe3\x06\xca\xad\xc0\x2e\xa9\x7e\x27\x03\x7e\x65\x3a\xb1\xa3\x6d\xb6\x82\x66\x52\xa5\xc1\x2b\xe9\x03\x48\xbf\x25\x37\x5b\x0b\x9b\x1c\x05\x0d\x46\x76\x46\xe8\x11\x0d\xcc\x66\x6b\x48\xc0\xe0\xac\xfe\x37\xbc\x26\x97\x7c\x02\xca\x92\x16\xdb\x65\x09\xde\x1e\xe4\x95\xe8\x83\xb5\x61\x5d\x82\x3c\x93\xa9\xfb\x3c\xa4\xbd\x06\x81\x5c\x0a\x4c\xc7\x77\x02\x94\xfc\x99\x05\xda\x51\x78\x62\xf0\x87\x28\x29\x95\x33\x03\xc2\x82\xb7\x40\x19\x8c\x0e\x87\x5b\x12\x23\x24\x7a\xc7\xef\x5f\xa0\xf9\xc6\xc2\xe8\x9b\xe3\xae\xd4\xb2\x90\xae\x94\x93\x1e\x26\x76\x42\xda\xb2\xae\xa1\xed\xd4\x6d\xdc\xae\xd6\xe8\x6a\xfb\x57\xe7\x4b\x2f\x43\xe1\x98\x9f\x8d\x4b\xdc\xef\x00\x00\x00\xff\xff\x4b\x50\x3b\xcf\x5f\x04\x00\x00")

func templatesHtmlConfirm_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlConfirm_successHtml,
		"templates/html/confirm_success.html",
	)
}

func templatesHtmlConfirm_successHtml() (*asset, error) {
	bytes, err := templatesHtmlConfirm_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/confirm_success.html", size: 1119, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlCrumb_errorHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x50\xc1\x6a\xc3\x30\x0c\x3d\xc7\x5f\xf1\xf0\x79\x69\xa1\xe7\x2c\xb7\xc1\xfe\xa2\x38\x91\xda\x04\x6c\x2b\x53\x9c\x8e\x62\xf2\xef\xc3\x9b\x0f\x61\xf4\x22\x09\x3d\xde\x7b\x7a\xca\x19\xc4\xb7\x39\x32\xec\xa8\x5b\x18\xae\xac\x2a\x6a\xf7\xdd\xe4\x9c\x38\x2c\xde\xa5\x02\x49\x08\x12\xaf\x13\x3b\x62\xb5\x38\x61\xdf\x8d\xe9\x68\x7e\x60\xf4\x6e\x5d\xdf\xed\xe8\x94\x6c\x6f\x00\xa0\x9b\x2e\xc7\x6d\x5b\x49\xfd\xa7\x86\x37\xa4\x89\x95\xf1\xed\x56\x38\x2c\x2a\x83\xe7\x80\x51\xc2\xe2\x39\xcd\xf1\x8e\xa7\x6c\x0a\xe5\xaf\x8d\xd7\xd4\x9d\xa7\x4b\x55\xfc\x67\xd4\x0e\x42\x4f\xdb\x9b\xc6\x34\x47\xc8\x79\xd6\x84\xdf\xda\x92\x8b\xf7\x72\xa9\x8a\xe7\x8a\x14\x42\x51\xcb\x19\xa7\x8f\x12\xb2\x84\x68\xba\x33\xcd\x8f\x6a\xf3\x37\xd6\xf6\x2a\xff\x4d\x24\x71\x7d\x0e\x38\x52\x51\xf8\x09\x00\x00\xff\xff\x54\xdc\xe2\x26\x41\x01\x00\x00")

func templatesHtmlCrumb_errorHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlCrumb_errorHtml,
		"templates/html/crumb_error.html",
	)
}

func templatesHtmlCrumb_errorHtml() (*asset, error) {
	bytes, err := templatesHtmlCrumb_errorHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/crumb_error.html", size: 321, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x8a\xc3\x20\x14\x45\xf7\x7e\xc5\xc5\x0f\x30\x3f\xe0\xb8\x9c\xd5\x2c\x86\x09\x59\x0f\x26\x3e\x1b\xc1\x68\x49\x0c\x14\x1e\xfe\x7b\x49\x5b\x4a\x43\x5b\xe8\xf2\xc2\x79\x1c\xde\x61\x86\x23\x1f\x12\x41\x86\xe4\xe8\x24\x51\xab\x60\x46\xa1\xe9\x18\x6d\x21\xc8\x21\x4f\x53\x4e\xff\x23\x59\x47\xb3\x84\xda\x00\xa1\xd7\x68\x84\x00\x00\x66\x04\x0f\xf5\x1d\xed\x61\x51\xed\xda\x2f\xc3\x1c\x7a\x42\xad\x3a\x06\xa3\x2d\xc6\x99\xfc\x97\x64\x46\x1b\x0a\x75\x7f\x3f\x50\xbf\xb6\x8c\x7b\x54\x9a\xfb\xd2\x8d\x35\xba\x89\xc1\x30\x83\x92\xdb\x64\x4f\x96\x2e\x2d\x9f\x7b\xf6\xb0\x34\x0f\xfb\x8d\x4b\xe8\xe6\xf2\xdd\xab\x0a\x3e\xe7\xb2\x55\xb8\x46\xba\x1d\x9d\x03\x00\x00\xff\xff\x26\x68\xf2\xa9\x44\x01\x00\x00")

func templatesHtmlIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlIndexHtml,
		"templates/html/index.html",
	)
}

func templatesHtmlIndexHtml() (*asset, error) {
	bytes, err := templatesHtmlIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/index.html", size: 324, mode: os.FileMode(420), modTime: time.Unix(1569772384, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_acceptHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x41\x6b\xec\x36\x10\x3e\xdb\xbf\x62\xd0\x25\xef\x1d\x6c\xc3\x3b\x6b\x0d\xa5\x04\x5a\x28\x6d\x68\x5a\x42\x4e\x41\xb6\x66\xd7\x22\xb2\x64\xa4\xf1\x6e\x8c\xf1\x7f\x2f\x92\xec\x8d\xd3\xdd\xd3\xbb\x2c\xab\x19\xcd\x37\x33\xdf\x7c\x1a\xcf\x33\x48\x3c\x2a\x83\xc0\x94\x39\x2b\xc2\x37\xd1\xb6\x38\x10\x5b\x96\x7c\x9e\x09\xfb\x41\x0b\x42\x60\xad\xed\x7b\x6b\xde\x3a\x14\x12\x1d\x83\x12\x96\x25\xcf\xb9\x54\x67\x68\xb5\xf0\xfe\xc0\x5a\xe1\x24\xab\x73\x00\x00\xde\xfd\xd8\x5b\x8b\x35\xa8\x7e\xb5\xe3\xc3\x19\xa1\x41\x34\x90\x92\x49\x20\x0b\x7e\x6c\x7c\xeb\x54\x83\xe1\x40\x1d\x02\x6f\xad\xc4\x7a\x9e\xa1\x7c\x56\x84\x7f\x8a\x1e\x61\x59\x78\x15\xad\xd0\x0b\xa5\x95\x39\x81\x56\x9e\x78\xd5\xfd\x58\x53\xfe\xaf\x92\xa2\xb1\x72\x62\x75\x9e\x67\xf3\x0c\xea\x08\xe5\xa3\x73\xd6\xc5\xa2\xb3\xfd\x5d\xa1\xd1\x11\xc4\xdf\x42\x0a\x73\x0a\xbd\x39\xab\x71\xf5\xb0\x3a\xcf\x02\x7c\xa8\xe5\x8a\x90\xf1\x4a\xaa\x73\x1d\xa1\xd1\xc8\x68\xca\x33\x7e\xb4\xae\xdf\x60\xc3\x7f\x06\x3d\x52\x67\xe5\x81\x3d\xfd\xf5\xfc\x0f\x03\xd1\x92\xb2\xe6\xc0\xe6\x19\x42\x5b\xff\xfe\xfd\x07\x94\x4f\x82\x3a\x5f\xfe\x1e\xb9\xf8\x25\xf2\x0e\xcb\xb2\x25\xe5\xca\x0c\x23\x01\x4d\x03\x1e\x58\xa7\xa4\x44\xc3\xc0\x88\x1e\x0f\x2c\x50\xc1\xe0\x2c\xf4\x88\x11\xb0\xfc\xd5\xca\x40\x12\x83\x6a\x0d\x5e\x21\x76\xad\x86\x9a\x8a\x93\xb3\xe3\x10\x12\x64\x5c\x8b\x06\x35\x1c\xad\x3b\x30\x21\xa5\x43\xef\x59\xfd\x18\xd8\x85\xf5\xc8\xab\x78\x25\x5e\xde\x97\x82\xe1\x12\xfb\x02\xdb\x5a\x43\xce\xea\xad\xbc\x0d\x0f\x94\xdc\x1d\x84\x53\xa2\x90\x98\x66\x2d\x9b\x69\x45\xfa\x0d\xf5\xc0\x60\xd0\xa2\xc5\xce\x6a\x89\xee\xc0\x5e\xed\xe8\x00\xf7\xb5\x7c\x69\x36\x55\xb9\x75\x9b\x71\xdf\x0b\xad\x63\xae\x1d\xe0\xbe\x3c\xc2\x0f\x82\xf0\x53\xf4\x23\xa1\x64\xf5\x0b\x82\x41\x94\x30\xdd\x24\x8a\x82\x0c\x53\x9d\xec\x98\x3c\x25\xbc\x20\x48\x6b\x1e\x28\xc5\x7c\xb3\x0e\x2e\xc2\xd0\xf7\x7b\xd1\x47\xeb\x40\x98\x89\xba\x20\x51\xd4\x1e\xe1\x9b\x56\xef\x08\x27\x75\x0e\x16\x45\x01\x5f\x00\x75\xca\x49\x18\x84\xa3\xe9\x7b\xc9\xab\xd8\xc0\x36\xf5\x24\xae\xdb\xf9\xb5\xa3\x27\x7b\xa5\x1a\xb6\x63\x87\xed\x7b\x63\x3f\xd8\xcd\x98\xae\x9e\xfb\x00\x45\xbc\x9b\x46\xd4\x5a\x73\x54\x41\xb1\x9b\xba\xd2\x71\x27\x93\xfb\x10\xd1\xc7\x92\x86\xf6\x41\xa1\xf4\x27\x8d\xc2\x23\xac\x66\xa0\x4e\x50\xe4\xf4\xa2\x7c\x17\x49\x48\x72\x0f\xef\x3d\xee\x02\x11\x5e\xc7\x4f\x6c\x80\x68\x0b\x85\x5e\xd5\xfa\xc9\xe2\xee\x25\xac\xe6\x66\x24\x0a\x69\x22\x43\x7e\x6c\x7a\x45\x57\x7e\x1a\x32\xd0\x90\x29\x06\xa7\x7a\xe1\x26\x56\x3f\x47\x3f\xaf\x52\xd0\xf5\x61\xf1\x2a\x88\x6a\xdd\x3b\x69\x5a\xd1\x71\x77\x0f\x1d\xad\xa5\xb0\xfb\xf2\x8c\x0f\xf5\x4b\x87\x26\x92\x90\x32\x07\x19\x44\xc9\xf4\x70\xc1\x07\xad\x3f\x85\x27\x36\xde\x12\x2b\x49\x63\x2b\x37\x9b\xd4\xa6\xb4\x4d\xd1\x10\x3a\x94\x20\x1a\x7b\x46\xb8\x28\xea\x40\x19\x4f\x6e\x8c\xeb\x26\xea\xb9\xb5\xfd\xa0\x91\x30\x86\xaf\xdb\x76\x88\xc0\x83\xb3\x2d\x7a\x5f\xf2\x6a\xb8\xed\x67\x53\xe2\x9d\xcf\xc0\xda\x55\xfc\x46\x6c\x3b\xf0\xbf\x00\x00\x00\xff\xff\xa0\xf3\x78\x9d\x4a\x06\x00\x00")

func templatesHtmlInvite_acceptHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_acceptHtml,
		"templates/html/invite_accept.html",
	)
}

func templatesHtmlInvite_acceptHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_acceptHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_accept.html", size: 1610, mode: os.FileMode(420), modTime: time.Unix(1570026183, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_codeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x93\x3f\xcb\xdc\x30\x0c\xc6\xe7\xe4\x53\x08\x2f\x9d\x92\xc0\x3b\x3b\x81\x0e\x1d\x0a\xa5\x3d\x7a\xed\xf0\x4e\x2f\x4e\xac\xbb\x18\x6c\x2b\x38\xca\xd1\x23\xe4\xbb\x17\x3b\xc9\xfd\x69\x6f\x31\x46\x96\x7e\xcf\x23\x24\xcf\x33\x68\x3c\x19\x8f\x20\x8c\xbf\x18\xc6\x8f\x8e\x34\x8a\x65\xc9\xe7\x99\xd1\x0d\x56\x31\x82\xe8\xc8\x39\xf2\x1f\x3d\x2a\x8d\x41\x40\x09\xcb\x92\xe7\x52\x9b\x0b\x74\x56\x8d\x63\x2d\x3a\x15\xb4\x68\x72\x00\x00\xd9\xbf\x3d\x46\x8b\xad\xa8\x79\xa7\xe9\xd3\x05\xa1\x45\xf4\xb0\x4a\x69\x60\x02\xee\x11\x64\xd4\x6c\xe6\x19\xca\xa3\x61\xfc\xae\x1c\xc2\xb2\xc8\x2a\x45\xc1\x29\x63\x8d\x3f\x83\x35\x23\xcb\xaa\x7f\xdb\x54\xfe\x11\x2f\x5a\xd2\x57\xd1\xe4\x79\x36\xcf\x60\x4e\x50\x7e\x09\x81\x42\xf2\x99\x3d\xe6\x2a\x8b\x81\x21\x9d\x85\x56\xfe\x1c\xdb\x09\x64\x71\x7b\x11\x4d\x9e\x45\x7c\xf4\x72\x23\x64\xb2\xd2\xe6\xd2\x24\x34\x7a\x9d\x42\x79\x26\x4f\x14\xdc\x8e\x8d\x77\x01\x0e\xb9\x27\x5d\x8b\xc3\x8f\xe3\x2f\x01\xaa\x63\x43\xbe\x16\xf3\x0c\xb1\xad\xdf\x3f\xbf\x41\x79\x50\xdc\x8f\xe5\xd7\xd4\xfe\xe7\xae\xc3\x81\x61\x59\x76\xd1\x67\xa7\x11\x59\x9c\x03\x4d\xc3\xfe\x2e\xad\x6a\xd1\xc2\x89\x42\xfd\x34\xac\x26\xf1\x54\x54\x83\x18\x90\x55\x4a\xdc\xab\x8c\x1f\x26\x06\xbe\x0e\x58\x0b\xc6\x3f\x2c\x9e\x14\x3a\xf2\x1c\xc8\x0a\xf0\xca\x61\x2d\x12\x10\x8c\xde\x6f\x2a\x18\x55\x68\x1c\xbb\x60\x5a\xd4\xed\xf5\xa6\xdc\xa3\x1d\x04\x0c\x56\x75\xd8\x93\xd5\x18\x6a\xf1\x4e\x53\x58\x47\x7b\xf7\x72\xf3\x3e\x3a\x65\x6d\x02\x3f\x01\x1e\xad\x44\x73\x10\x8f\xc2\x4d\x8c\x5a\x34\x07\x8b\x6a\x44\x40\xcf\x18\xe0\xfa\x82\x0e\x3d\x06\x2c\x65\x95\xe0\xcd\x7d\x50\x79\x26\xdb\x89\x99\xfc\xd6\xf6\x38\xb5\xce\xdc\x1b\x6f\xd9\x43\xcb\xbe\x18\x82\x71\x2a\x5c\x45\x73\x4c\xef\xb2\x5a\x8b\x56\x40\x15\x3d\x6d\xcb\xb6\x62\xd3\x8c\x5e\x2e\xdf\x89\x88\xe3\x8e\xff\x97\xbd\xdd\x5f\x7d\xa6\xad\x26\xfd\xb4\x7d\xad\xfe\x06\x00\x00\xff\xff\x02\x69\xb8\x6b\x8e\x03\x00\x00")

func templatesHtmlInvite_codeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_codeHtml,
		"templates/html/invite_code.html",
	)
}

func templatesHtmlInvite_codeHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_codeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_code.html", size: 910, mode: os.FileMode(420), modTime: time.Unix(1569942517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_how_it_worksHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xc1\x8e\xe3\x36\x0c\x3d\x77\xbe\x82\x98\x4b\x66\x80\x34\x7b\x2f\x82\xec\xb5\x73\x69\x0f\xdb\x62\x8f\x0b\xda\x7a\x89\xb5\x91\x45\x8f\x44\xc7\x6b\x04\xf9\xf7\x82\x92\x93\xc9\x4c\x17\x28\x7a\x8c\x22\x52\xe4\x7b\x8f\x8f\x3e\x9f\xc9\x61\xef\x23\xe8\xd1\xc7\x93\x57\x7c\xeb\x64\xfa\xe6\xf5\xdb\x24\xe9\x98\x1f\xe9\x72\x79\x78\xf8\x65\x3b\xec\x7e\x47\xc2\x2a\x53\x27\x13\x95\x7b\xac\x5e\x62\x26\xbb\xf5\x1b\x7d\x05\x3d\x69\x07\xda\xb6\xe2\xb0\x3b\x9f\x69\xf3\xc5\x2b\xfe\xe0\x1e\x74\xb9\x6c\x3f\x95\x53\xea\xd9\x07\x1f\x0f\x14\x7c\xd6\x67\x72\x12\x57\x4a\x19\xd1\x91\x76\xe8\x49\xc6\x94\x11\x4e\xc8\x1b\x7a\x89\x59\xc1\x8e\x26\xd0\x01\x11\x89\x15\x77\x6f\x92\x65\xcb\xc4\xd1\xdd\x45\xab\xd0\x16\xfd\x6e\x96\x71\xfb\x09\xfd\x6e\x43\x7f\x75\x88\x34\xcb\xf8\xfe\xce\x00\x19\x02\xca\xf9\x31\xca\x44\x1c\x24\x1e\x68\xf2\xda\x11\x53\xf0\xf1\x48\x4f\x2a\xf4\x9f\x9d\x64\xaf\x78\xa6\xa9\x43\x82\x5d\x9e\xa9\xe5\x48\x0d\xe8\x91\xdb\x16\x83\xc2\x3d\x6e\xb6\x9f\x86\x5d\x05\xee\xcf\xd8\x82\x38\x7e\xec\x80\x3a\xce\xd4\x00\x91\xae\x41\xd4\xcc\xf5\x9e\xf3\x27\xef\x46\x0e\x35\xf7\xe4\x43\xb0\xe4\x43\x92\xbe\x5c\xdb\x4b\xb2\x7f\x7c\x22\x18\xa4\xc4\xce\x25\xe4\x8a\xc8\x5b\xc4\xc1\xfa\x48\x32\x1e\xba\xd2\x4f\xc2\x61\x0c\x9c\x28\x8f\x4d\x6e\x93\x1f\x4a\x1d\x43\x92\x16\x39\xaf\xa9\x07\x47\xa3\xc6\xc2\x57\x16\x0c\x25\xa6\x8c\x56\xa2\xa3\x56\xe2\xde\xa7\xbe\x96\x5e\x9f\x54\xa1\x56\xfa\x21\x40\xb1\x94\x72\x9f\xf7\xae\xf9\xaf\xdd\x4c\x4e\x8c\x49\x27\xe4\x95\xb4\xf3\x99\x26\x9e\x3f\x9b\x64\xde\x1f\x51\xb6\x8a\x59\x97\x72\x5b\x3f\x78\x44\x25\xd9\x97\x83\x3b\xf4\x9c\x20\x9b\x76\x3a\x3e\xc1\x2a\x99\x24\x3a\x24\xf2\x7b\x8b\x82\x3f\x59\x23\xbc\x54\xba\x26\x19\x6f\x39\x9a\x30\x62\x4d\xfb\x24\x3d\x65\xe9\xa1\x9d\xdd\x6c\x39\x04\x38\x7a\xfc\x5f\xf2\x7d\x24\x9f\xe9\xfb\x18\x8f\xe5\x94\x24\x51\x14\xdd\x58\x4f\x9c\xf3\xd8\xa3\x36\x62\x32\xe3\x90\xc0\x6e\xae\xc5\x32\x25\x84\x3a\x38\x9d\x1f\xaa\xee\xec\xdd\x01\x29\x4b\x2c\x04\x36\x33\xe1\x87\x22\x66\xeb\xf4\x2d\x4b\x42\xa1\x41\x92\x72\x13\x40\xb9\xe3\x64\xb5\xcc\x32\x7e\x54\xc1\x35\x69\x7f\xc7\xc2\xcb\xde\x18\x98\x8a\x5c\xe5\x36\x11\x4b\xe0\x84\x95\x23\x78\xed\x90\x28\x02\xce\xae\xe0\xc7\x20\x19\x3f\x4b\xaf\x42\x01\x1f\x39\x2a\xb3\x34\x75\xf2\x91\xa9\x89\x73\x81\x7b\x6d\x08\x71\x08\x32\x95\x6e\x54\x2c\x5d\xcd\x1e\x0d\x64\xfd\x18\xb9\xa1\x5a\xb2\x3d\x65\x11\x4f\x3e\x56\x06\x93\xb0\x43\x2e\xbe\x91\xb1\x36\xd4\x69\xfb\x5a\xc7\xfe\x75\xb7\xe0\xc8\x21\xcc\xcf\xe5\x85\x49\x92\xab\x73\x31\x74\x89\x33\xf2\xf5\xa5\x46\xdc\x7c\x55\xc5\xa2\x68\xf3\x0b\x03\x49\xc6\xe0\x88\x43\x96\x1b\x18\x6d\x87\xf6\xb8\x48\x13\x3f\xb4\xcc\xdf\xf6\x75\xd7\xb0\x2b\x8f\xda\x2f\xf4\x3b\xd9\xef\x8d\xb5\x13\x8a\x01\x19\x5b\x8a\xa8\x1b\xfa\xe2\x6d\xfe\x27\x98\x47\xac\x94\x4c\x0d\xb5\xf3\xde\x47\x67\xc1\x05\xbc\x72\xe2\x4b\x88\xa9\x63\x5d\x3a\x37\x77\x32\x29\x19\x15\x4b\xb1\x37\xcc\xd7\xe4\x75\x95\x09\x9c\xbd\xe1\xf1\x7d\xcc\x5a\xb8\x55\x9e\xdf\x24\xcf\x4a\xcd\x98\x7d\x2c\xee\x10\x54\x0e\x46\xf2\xbd\x2e\x6e\x46\x6b\x43\x5f\x74\x51\xd4\x76\x1d\xf3\xa2\xa5\x3b\x3f\xfa\xa9\x09\x5b\x59\xc5\x3a\xff\xed\x87\x57\x67\xdb\xd0\x8b\xde\x7c\x6c\x1c\xac\xd0\x45\x07\xad\x0c\x73\x25\x88\xb3\xda\x80\x14\x6b\x7c\x97\xd6\xa8\x97\xe2\x46\x03\x97\x55\xb0\x08\xf2\xea\xff\x5e\xaf\xac\x2e\x63\x64\xa9\x27\x8e\xe5\xb8\xae\xb4\xda\xc8\xd4\xb1\xe2\x84\x44\x3d\x72\xe6\x43\x5d\x03\x66\x02\x47\x9b\x66\x1e\x86\x24\x43\xf2\xac\xb8\x47\x28\x57\x7f\x92\x13\x52\x98\x7f\x2d\xa6\xe7\x5b\x56\xb8\xcf\xf4\x62\x04\x94\xdd\xe9\x15\x61\xa6\x5e\xca\x94\xde\x6e\x18\x01\xd1\xca\x33\x79\xe4\xce\x84\x55\xb5\xd1\x60\x43\x7f\x97\x61\x1e\x23\x97\xd0\xaa\x7e\x45\x8a\xd0\x52\xcc\xbb\x3c\x43\xe0\x16\x94\xfc\xa1\x53\x8a\x32\x15\x34\x6b\x3e\x53\x54\x03\x6a\x46\x35\x85\x3d\xf1\x81\x7d\x5c\x97\x6c\xad\x84\x80\x56\xfd\x09\xa6\xd5\x09\x26\xd5\xe7\xe2\x23\x59\x8d\x08\xdb\xdb\xe6\x20\x5e\x8b\x5c\x6c\xad\xab\x50\xcf\x47\x14\x48\x0e\xb6\x9b\x54\x91\xcc\x95\xf7\xc5\xdf\xa6\x2a\x28\x5b\x15\xf9\xdd\x27\x40\xc2\xeb\xe8\x93\x91\xb7\xc7\x64\xee\x95\x98\xb2\x62\xc8\xcb\x7a\xb5\x72\x26\x9e\x17\x54\x1f\xce\x67\x32\xda\x2e\x97\x87\x7f\x02\x00\x00\xff\xff\x57\x70\x0f\x96\x7b\x08\x00\x00")

func templatesHtmlInvite_how_it_worksHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_how_it_worksHtml,
		"templates/html/invite_how_it_works.html",
	)
}

func templatesHtmlInvite_how_it_worksHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_how_it_worksHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_how_it_works.html", size: 2171, mode: os.FileMode(420), modTime: time.Unix(1570114547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_requestHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x8f\x9b\x30\x10\x3d\xc3\xaf\x18\xf9\x0e\x48\x7b\x36\xdc\x22\xb5\x52\xd5\xae\x36\xed\xa1\xa7\xc8\xe0\x49\xb0\xea\x0f\x6a\x0f\x49\x23\xc4\x7f\xaf\xec\x40\x42\xda\x3d\xec\xc5\xb2\xe7\xe3\xcd\x9b\xf1\x9b\x69\x02\x89\x47\x65\x11\x98\xb2\x67\x45\x78\xf0\xf8\x7b\xc4\x40\x6c\x9e\xf3\x69\x22\x34\x83\x16\x84\xc0\x3a\x67\x8c\xb3\x87\x1e\x85\x44\xcf\xa0\x84\x79\xce\x73\x2e\xd5\x19\x3a\x2d\x42\xa8\x59\x27\xbc\x64\x4d\x0e\x00\xc0\xfb\x97\xad\xb5\x58\x92\x9a\xb7\x1b\x34\xa4\x4a\x82\x94\xb3\xd0\x39\x89\x01\xc8\x01\xf5\x08\x3c\xbe\x9a\x69\x82\x72\xaf\x08\xbf\x0a\x83\x30\xcf\xbc\x4a\x56\x30\x42\x69\x65\x4f\xa0\x55\x20\x5e\xf5\x2f\x4b\xa9\x7f\x18\x14\xad\x93\x57\xd6\xe4\x79\x36\x4d\xa0\x8e\x50\xee\xbc\x77\x3e\x91\xcd\xb6\xb1\x42\xa3\x27\x48\x67\x21\x85\x3d\xc5\x9e\xbc\xd3\xb8\x78\x58\x93\x67\x11\x3e\x72\xb9\x23\x64\xbc\x92\xea\xdc\x24\x68\xb4\x32\x99\xf2\x8c\x1f\x9d\x37\x2b\x6c\xbc\x33\x30\x48\xbd\x93\x35\x7b\xfd\xb6\xff\xce\x40\x74\xb1\xd3\x9a\x4d\x13\xc4\xb6\x7e\xbc\x7d\x81\xf2\x55\x50\x1f\xca\xcf\x69\xe2\xeb\x54\xe6\x79\xad\xfa\x4c\x35\x62\x16\x27\xef\xc6\x61\xf5\x73\x2d\x5a\xd4\x70\x74\xbe\x66\x42\x4a\x8f\x21\xb0\x66\x17\x07\x04\xcb\x93\x57\x29\x64\x8d\x57\x76\x18\x09\xe8\x3a\x60\xcd\x30\xc6\xb1\x27\xf0\xce\x59\xf2\x4e\x33\xb0\xc2\xe0\x03\x12\x94\xdc\x3c\x84\x57\xa2\x90\x18\x3a\xaf\x5a\x94\xed\x75\x41\xfa\x84\x7a\x60\x30\x68\xd1\x61\xef\xb4\x44\x5f\xb3\x9f\x6e\xf4\x80\x5b\x3a\x77\xe2\xc1\x08\xad\x13\xee\x26\x79\x4b\x85\xf0\x0f\x41\x3c\x0a\x33\x12\x4a\xd6\xec\x2c\xa1\x4f\xea\x78\x42\x84\xab\x1b\x41\x78\x84\x30\xb6\x0b\xa5\xa8\xa2\x0f\x2b\x08\x2e\x8a\xfa\x92\x57\x89\x50\xf3\xf8\xda\x3c\xe3\xed\x48\xe4\xec\x32\xad\x30\xb6\x46\xd1\x9d\x63\x4b\x16\x5a\xb2\xc5\xe0\x95\x11\xfe\xca\x9a\x7d\xf2\xf3\xea\x96\x74\x03\xa8\x62\x27\x8b\x04\x1f\x0b\xb4\xac\x57\xef\x2e\x07\x45\x87\x8b\xf3\xbf\x02\x83\x79\xce\x6e\x32\xbe\x95\x4f\x9f\xff\xae\xac\x8f\xce\x51\x5c\xa1\xfc\xbf\xf0\xe5\xfe\xde\xb2\x2e\x49\x69\x93\x57\xc5\xfe\x0d\x00\x00\xff\xff\x80\xc9\xe5\xaf\xf1\x03\x00\x00")

func templatesHtmlInvite_requestHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_requestHtml,
		"templates/html/invite_request.html",
	)
}

func templatesHtmlInvite_requestHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_requestHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_request.html", size: 1009, mode: os.FileMode(420), modTime: time.Unix(1570114569, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_request_emailHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x41\x6b\xdc\x30\x10\x85\xef\xfe\x15\x8f\x25\xd0\x04\x82\x7d\x5f\xbc\x2e\xa5\x14\x52\x28\xa5\xa4\xed\xa1\xa7\x45\x6b\xcf\xae\x44\x64\x8d\x2b\x8d\xe3\x2e\xc2\xff\xbd\x48\x76\x12\x68\x97\x42\x7a\x33\xd2\x78\xde\x37\x6f\x9e\x62\x44\x47\x47\xe3\x08\x1b\xe3\x1e\x8d\xd0\xde\xd3\xcf\x91\x82\xec\xa9\x57\xc6\x6e\x30\xcf\x45\x3d\x34\x77\x64\x2d\xdf\xd6\xd5\xd0\x14\xc5\x1d\x79\x82\xf2\x04\xd1\x84\xfc\x93\x12\xc3\x0e\x2d\x77\x14\x70\xe6\x11\x6b\x0b\xea\x70\x64\x9f\xcb\xea\x74\xd9\xc4\x88\xf2\xab\x11\xfa\xac\x7a\xc2\x3c\xd7\x55\x3e\x45\x12\x32\xee\x04\x6b\x82\x94\x45\x51\x8f\xb6\x29\x00\x20\x46\x78\xe5\x4e\x84\x2b\x73\x8b\xab\x05\x0f\xdb\x1d\xca\x8f\xf9\x33\x24\xb6\x54\x57\x5b\xd3\xd4\x0a\xda\xd3\x71\xb7\x89\x11\x49\xe2\xfb\xfd\x27\x5c\x95\x5f\x94\xe8\xb0\x96\xbf\x6b\x5b\x1a\x04\xf3\xfc\x76\x1d\x34\x89\xef\x62\x7c\xea\x5c\xbe\xe7\x2e\x51\x6d\x9a\xbf\xcf\xea\x4a\x35\x75\x65\xcd\x33\x17\xb9\x2e\x3b\x53\x25\xd6\x64\xd0\x07\xd5\xea\xec\x40\x9e\x82\x3a\xa8\x03\x3f\x12\x5a\x76\xa2\x8c\x0b\x50\xb0\xc6\x3d\xe0\x7a\x32\xa2\x2f\x19\x77\x03\xe1\xd7\x39\x85\x89\x0e\x21\x31\xe2\x9e\x7a\xea\x0f\xe4\xb7\xf8\xa6\x29\x2c\xbb\x49\x6a\x01\xa2\x95\xe4\x8d\x38\xa2\x2e\x29\x84\x04\xbe\x2a\x0d\xe4\x03\xbb\x7c\x3d\x29\x27\xe9\x78\xf5\xf8\xcc\xa3\x0f\x64\x8f\x65\x6a\xf8\x0a\xa2\x8e\x29\xc0\xb1\x2c\x63\xb7\x02\x16\x4d\x1e\x03\xf1\x60\x09\x8b\x96\xc7\x81\xb4\x5a\x7b\x7b\x7a\x93\xad\x61\x77\x22\x0f\xfa\x35\x58\xe5\x16\x4f\x0e\x64\x79\x82\x39\x66\xbc\x34\xd0\xc4\xae\x23\x9f\xa4\x26\x7d\x2e\x97\x24\xd6\x43\xf3\x83\x47\xb4\xca\x41\xd9\xc0\x10\xb2\xf6\x49\x4d\x18\x27\x46\x67\x3c\xb5\x62\xcf\xcb\xcc\x26\x20\xe5\xe2\x9a\xdd\xff\x59\x7d\x03\xe5\x3a\x90\x13\xca\xa9\x36\xfe\xcf\x2d\xa2\x57\x6e\x54\xd6\x9e\xb7\xcf\x80\x97\x82\x79\x39\x97\x39\x78\xff\x2e\x59\x72\x98\x3b\x6b\x8f\xaa\x29\x8a\x18\x21\xd4\x0f\x56\xc9\xcb\x0b\xd6\x3c\xed\x8d\xec\x27\xf6\x0f\x21\x3f\xe0\xe2\x25\xb1\xbf\x03\x00\x00\xff\xff\x89\x5f\xc9\x61\xf0\x03\x00\x00")

func templatesHtmlInvite_request_emailHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_request_emailHtml,
		"templates/html/invite_request_email.html",
	)
}

func templatesHtmlInvite_request_emailHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_request_emailHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_request_email.html", size: 1008, mode: os.FileMode(420), modTime: time.Unix(1570114794, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlInvite_request_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xb1\x6e\x84\x30\x10\x44\xeb\xf0\x15\x13\x37\xa9\x38\xa4\xab\x09\x3f\x91\x22\x25\x72\xec\x25\xac\x64\xbc\xc4\x5e\x88\x4e\x88\x7f\x8f\xe0\x1c\xe9\x14\xa5\xb1\x2d\xcf\xec\xec\xe8\x6d\x1b\x3c\x0d\x1c\x09\x86\xe3\xca\x4a\x7d\xa2\xaf\x85\xb2\xf6\x79\x71\x8e\x72\x36\xfb\x5e\x6d\x1b\x94\xa6\x39\x58\x25\x18\x27\xd3\x24\xb1\x1f\xc9\x7a\x4a\x06\x17\xec\x7b\x55\xb5\x9e\x57\xb8\x60\x73\x7e\x35\xce\x26\x6f\xba\x0a\x00\xda\xf1\xfa\xf8\x5b\x97\xa1\xee\xed\x9e\xfd\xdc\x36\xe3\xb5\x38\xff\x04\xd4\x1f\xe2\x6f\xa6\xab\x9e\x1e\x05\x1b\x28\x29\xce\xb3\xfe\xad\x87\x24\x81\x8a\x74\xf8\xcf\xb0\xb9\x7b\xa7\x97\x95\x90\x29\x2a\x6e\xb2\xc0\x46\xd0\x64\x39\xe0\x9b\x75\x04\xc7\xac\x69\x71\xca\x12\x33\x06\x49\x70\x32\xcd\x81\x94\xe3\x27\x74\x24\x9c\x24\xec\x21\x63\x4e\x72\xac\xb9\xb4\xcd\x7c\x94\x69\x3c\xaf\xa5\xf0\xfd\x59\xae\x7f\x11\x0d\x22\x4a\xa9\x00\xa4\xe8\x0f\x52\x3f\x01\x00\x00\xff\xff\x63\x7c\x4b\xdd\x70\x01\x00\x00")

func templatesHtmlInvite_request_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlInvite_request_successHtml,
		"templates/html/invite_request_success.html",
	)
}

func templatesHtmlInvite_request_successHtml() (*asset, error) {
	bytes, err := templatesHtmlInvite_request_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/invite_request_success.html", size: 368, mode: os.FileMode(420), modTime: time.Unix(1569771967, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlSubscribeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\x4f\x6f\x9c\x3c\x10\xc6\xcf\xcb\xa7\x18\xf9\x92\xe4\xb0\x20\xe5\xec\xe5\x16\xe9\x7d\xa5\xaa\x8d\x9a\x46\x51\x4f\x95\xc1\xc3\x62\xc5\xf6\xa0\x61\xd8\x16\x21\xbe\x7b\x65\x96\xfd\x93\x66\x2f\x08\xc6\x33\x3f\x3f\x63\x9e\xf1\x34\x81\xc5\xc6\x45\x04\xd5\x0f\x55\x5f\xb3\xab\x50\xcd\x73\x36\x4d\x82\xa1\xf3\x46\x10\x54\x4d\x21\x50\xfc\xd5\xa2\xb1\xc8\x0a\x72\x98\xe7\x2c\xd3\xd6\x1d\xa0\xf6\xa6\xef\x77\xaa\x36\x6c\x55\x99\x01\x00\xe8\xf6\xf1\x3a\xba\x5d\x8b\xca\x97\x13\x1c\x84\x40\x5a\x04\x5d\x93\xc5\x72\x9a\x20\x7f\x71\x82\x5f\x4d\x40\x98\x67\x5d\x2c\x51\x08\xc6\x79\x17\xf7\xe0\x5d\x2f\xba\x68\x1f\x57\xf6\x3f\x5b\x6e\x2b\xb2\xa3\x2a\xb3\x6c\x33\x4d\xe0\x1a\xc8\x9f\x98\x89\x17\x75\x9b\xeb\x5c\xe3\x91\x05\x96\xe7\xd6\x9a\xb8\x4f\x4d\x30\x79\x5c\x57\x54\x99\x6d\x12\x3e\x69\x39\x13\x36\xba\xb0\xee\x50\x2e\x68\x8c\x76\x09\x65\x1b\xdd\x10\x87\x13\x36\xbd\x2b\x08\x28\x2d\xd9\x9d\x7a\xfe\xf6\xf2\x43\x81\xa9\xc5\x51\xdc\xa9\x69\x82\xd4\xd6\xeb\xf7\x2f\x90\x3f\x1b\x69\xfb\xfc\x72\x00\xf3\x7c\xda\xf1\xa3\xcc\xc4\xdb\xee\x99\x86\xee\xb4\xae\xbd\xa9\xd0\x43\x43\xbc\x53\xc6\x5a\xc6\xbe\x57\xe5\x53\x3a\x1c\x58\x3f\x75\xb1\xa4\x9c\xf2\x5d\xec\x06\x01\x19\x3b\xdc\x29\x4c\x79\xea\x03\xbc\xa6\x28\x4c\x5e\x41\x34\x01\x2f\x48\x70\xf6\xea\xc3\xb0\x33\x5b\x8b\x47\xb1\xb6\x1a\x57\xd2\x7f\xe8\x3b\x05\x9d\x37\x35\xb6\xe4\x2d\xf2\x4e\xfd\xa4\x81\x01\xaf\xe5\x9c\x85\xf7\xc1\x78\xbf\x70\xaf\x8a\xaf\xa5\x08\xfe\x11\x48\x8f\x6d\x18\x04\xad\x2a\xdf\x10\x22\xa2\x85\xf1\x13\x34\x39\xa6\x4f\xff\x60\xa4\xe1\xb8\x92\xc3\x1b\x82\xa5\x78\x27\xc7\x9a\x7b\x62\xf8\x6d\xa2\x3c\xdc\xaa\x6e\x88\xc1\xc4\x51\xda\x64\x28\xf4\x3d\xc2\xbd\x77\xef\x08\x7b\x77\x48\x11\x27\x89\x6f\x40\x5a\xc7\x16\x3a\xc3\x32\x3e\xe4\xba\x58\x1a\x28\x2f\x36\xc8\x36\xba\x1a\x44\x28\xae\xa7\xdb\x0f\x55\x70\x72\xee\xa9\x92\x08\x95\xc4\x6d\xc7\x2e\x18\x1e\x17\xbf\x07\x27\xba\x38\x16\x1d\x01\x45\xea\x7c\xb5\xf2\x11\xbb\x98\xe0\xa6\xb5\x1b\x22\x49\x73\x93\x6d\x74\x57\xfe\xdf\xa4\xc6\xee\x18\xc1\x13\xbd\x27\xd5\x42\xa0\x31\x94\x43\x3c\x0f\xad\x2e\x30\x94\xd0\x30\x85\x65\xbc\xae\x27\x28\x05\x22\x68\x03\x2d\x63\x73\xcb\x9b\xaf\x17\xcc\xe2\xce\x34\xb4\x40\x11\xe8\x80\x0c\x2d\x32\xea\xc2\x94\xb9\x2e\xba\xcf\xe2\xd7\xf7\x5b\xf7\xc5\xda\xc2\x72\x99\x9c\x66\xe8\x6f\x00\x00\x00\xff\xff\xc8\x83\x4b\xd6\x6f\x04\x00\x00")

func templatesHtmlSubscribeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlSubscribeHtml,
		"templates/html/subscribe.html",
	)
}

func templatesHtmlSubscribeHtml() (*asset, error) {
	bytes, err := templatesHtmlSubscribeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/subscribe.html", size: 1135, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlSubscribe_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xc1\x8a\xe3\x30\x0c\x86\xcf\x9b\xa7\xf8\xd7\x97\x3d\xb5\x85\x9e\xb3\x79\x89\x39\x0c\x73\x2a\x8e\xad\xd4\x86\xc4\x0a\x92\xd2\xa1\x84\xbc\xfb\x90\xd6\x03\x65\x98\x8b\x6d\xfc\x4b\x1f\xd2\xb7\xae\x88\x34\xe4\x42\x70\xba\xf4\x1a\x24\xf7\x74\xd1\x25\x04\x52\x75\xdb\xd6\xac\x2b\x8c\xa6\x79\xf4\x46\x70\x81\xa7\x89\xcb\x25\x91\x8f\x24\x0e\x47\x6c\x5b\xd3\xb4\x31\xdf\x10\x46\xaf\xfa\xdf\x05\x2f\xd1\x75\x0d\x00\xb4\xe9\xfc\xfa\x7b\xa8\x4d\xdd\xdb\x93\xfd\xb7\x3d\xa5\x73\xad\xfc\x01\x38\xf4\x1c\xef\xae\x6b\xfe\xbc\x06\x7e\x24\x31\x3c\xce\xc3\xf7\x78\x10\x1e\xa9\x46\x7b\xfd\x03\x36\x77\x1f\xbc\x08\x68\xf2\x79\x84\x8f\x51\x48\x15\xc9\x2b\x7a\xa2\x02\xa1\x6b\x56\x23\xa1\x78\xc4\x3b\xfd\xbb\x11\x94\x8a\xe1\xce\x0b\x3c\x02\x97\x21\xcb\xe4\x2d\x73\xa9\x00\x4b\xde\xf0\x99\x2d\x21\x17\x35\x59\xc2\x9e\x29\x06\x16\x04\x9e\xe6\x91\x2c\x97\x2b\x2c\x11\xaa\xbd\xf9\xd1\x3c\x0b\xef\x13\x1e\xdb\xd3\xbc\xef\x71\x8a\xf9\x56\x77\x7d\x3e\xeb\xf5\xab\xdd\x81\xd9\x48\xaa\x7b\x2a\x71\x97\xfc\x15\x00\x00\xff\xff\xd7\xe7\x96\x41\xa6\x01\x00\x00")

func templatesHtmlSubscribe_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlSubscribe_successHtml,
		"templates/html/subscribe_success.html",
	)
}

func templatesHtmlSubscribe_successHtml() (*asset, error) {
	bytes, err := templatesHtmlSubscribe_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/subscribe_success.html", size: 422, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlUnsubscribeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x94\xc1\x8e\x9b\x30\x10\x86\xcf\xf0\x14\x23\x5f\x7a\x02\xa4\x3d\x3b\xbe\xad\xd4\x4a\x55\xbb\x6a\x76\x0f\x3d\x55\x06\x0f\x8b\x55\xdb\x83\xcc\x90\x36\x42\xbc\x7b\x65\x87\x64\x49\x95\x8b\xc1\xf6\xf8\x9b\x7f\x86\xdf\x2c\x0b\x18\xec\x6d\x40\x10\x73\x98\xe6\x76\xea\xa2\x6d\x51\xac\x6b\xb9\x2c\x8c\x7e\x74\x9a\x11\x44\x47\xde\x53\xf8\x35\xa0\x36\x18\x05\xd4\xb0\xae\x65\x29\x8d\x3d\x41\xe7\xf4\x34\x1d\x44\xa7\xa3\x11\xaa\x04\x00\x90\xc3\xd3\x7e\xb5\xda\x0e\xa9\xb7\x0f\x3c\xf4\x91\x3c\xf0\x80\x20\x3b\x32\xa8\x96\x05\xea\xa3\x65\xfc\xa6\x3d\xc2\xba\xca\x26\xaf\x82\xd7\xd6\xd9\xf0\x0e\xce\x4e\x2c\x9b\xe1\x69\xe3\xff\x97\xb6\x6a\xc9\x9c\x85\x2a\xcb\x62\x59\xc0\xf6\x50\x3f\xc7\x48\x31\x2b\x2c\xf6\xb1\xda\x61\x64\xc8\x63\x65\x74\x78\x4f\x85\x44\x72\xb8\xed\x08\x55\x16\x09\x9f\xb4\xdc\x08\x85\x6c\x8c\x3d\xa9\x8c\xc6\x60\xd2\x52\x8a\x29\x0b\xd9\x53\xf4\x57\x72\x7a\x17\xe0\x91\x07\x32\x07\xf1\xf2\xfd\xf8\x2a\x40\x77\x6c\x29\x1c\xc4\xb2\x40\xaa\xec\xed\xc7\x57\xa8\x5f\x34\x0f\x53\xbd\xef\xc3\xba\x5e\xd3\x5e\xc6\xbd\xde\x44\xad\xde\x23\xcd\x63\x8a\x29\xa4\xd3\x2d\x3a\xe8\x29\x1e\x84\x36\x26\xe2\x34\x09\xf5\x9c\x5a\x04\xdb\x54\x36\x39\x24\x07\xdb\x30\xce\x0c\x7c\x1e\xf1\x20\x30\x05\x89\x3b\x6c\x47\x81\x23\x39\x01\x41\x7b\xfc\xe0\x81\x35\xbb\x89\x8e\x56\x57\x06\x2f\x52\x4d\x7b\xde\x48\x9f\xd1\x8d\x02\x46\xa7\x3b\x1c\xc8\x19\x8c\x07\xf1\x93\xe6\x08\xb8\xd7\x72\x91\x3c\x79\xed\x5c\x86\xee\x4e\xee\x75\x30\xfe\x65\x48\x43\xe5\x67\x46\x23\xd4\xeb\x60\x27\xb0\x53\xf6\xc6\x1d\x10\xce\x34\xc3\xad\x71\x06\x98\x72\xcc\xde\x22\xf0\xc7\xf2\x50\xcb\x26\x67\xdd\xda\x7a\xfd\x7e\xbb\x16\xb7\x33\x33\x85\xad\x37\xd3\xdc\x7a\xcb\x37\x51\x2d\x07\x68\x39\x54\x63\xb4\x5e\xc7\xb3\x50\xc7\xbc\x2f\x9b\xcb\xa1\x1b\x48\x36\x49\xfe\xe6\xc7\x4b\x8a\xbc\xf1\xd0\x9f\x3d\x11\xa7\x0b\x50\x16\x72\x54\x5f\xfa\x54\xc9\xa7\x88\xe0\x88\x7e\x27\xe9\x4c\x20\xd1\xab\x5b\x6d\xb2\x41\xaf\x1e\xd6\xc7\x03\x06\x90\x1a\x86\x88\xfd\x23\x67\x1d\xef\x7c\x95\xee\x1d\x50\x00\x3a\x61\x84\x01\x23\xca\x46\xab\x5a\x36\xe3\x9d\xec\xed\xf1\xe8\xb6\x6f\xba\xf3\xaf\xe0\xea\xfe\x7f\x01\x00\x00\xff\xff\x1c\x5a\x0d\xd7\x2f\x04\x00\x00")

func templatesHtmlUnsubscribeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlUnsubscribeHtml,
		"templates/html/unsubscribe.html",
	)
}

func templatesHtmlUnsubscribeHtml() (*asset, error) {
	bytes, err := templatesHtmlUnsubscribeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/unsubscribe.html", size: 1071, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesHtmlUnsubscribe_successHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xc1\x6e\xf3\x20\x10\x84\xcf\xbf\x9f\x62\x7e\x2e\x3d\x25\x91\x72\x76\xfd\x12\x3d\xf4\x18\x11\x58\x17\x24\x60\x11\xac\x53\x45\xc8\xef\x5e\xd9\xa1\x55\xd4\x5e\x00\x31\x3b\xc3\xf0\xb5\x06\x4b\xb3\x4f\x04\xb5\xa4\xba\x5c\xab\x29\xfe\x4a\x97\xba\x18\x43\xb5\xaa\x75\x1d\x5a\x83\x50\xcc\x41\x0b\x41\x19\x8e\x91\xd3\xc5\x91\xb6\x54\x14\x70\xc4\xba\x0e\xc3\x68\xfd\x0d\x26\xe8\x5a\x5f\x95\xd1\xc5\xaa\x69\x00\x80\xd1\x9d\x9f\x6f\x0f\xdd\x35\xbd\x3d\xc2\xff\x8f\x27\x77\xee\x93\xbf\x02\x0e\x57\xb6\x77\x35\x0d\xff\x9e\x05\x1d\xa8\x08\xf6\xf5\xf0\xdd\x0f\x85\x03\x75\x69\x9b\xdf\xc3\xf2\xf4\x4e\x2f\x37\x42\xa5\x24\xb8\xf3\x02\x0d\xc3\x69\xf6\x25\x6a\xf1\x9c\x40\x51\xfb\x00\x71\x5a\xf0\xe9\xc5\xc1\xa7\x2a\x65\x31\x9b\x56\x31\x73\x81\xe1\x98\x03\x89\x4f\x1f\x10\x47\xf8\x01\x93\x77\x7b\x2e\xbc\xbd\x7d\x1c\x4f\x79\x6b\x78\xb2\xfe\xd6\x7f\xf1\x38\xf6\x6d\x68\xed\x0f\xb7\x99\x59\xa8\x74\xaa\x94\xec\x46\xef\x2b\x00\x00\xff\xff\xb0\x69\x7a\x0d\x82\x01\x00\x00")

func templatesHtmlUnsubscribe_successHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesHtmlUnsubscribe_successHtml,
		"templates/html/unsubscribe_success.html",
	)
}

func templatesHtmlUnsubscribe_successHtml() (*asset, error) {
	bytes, err := templatesHtmlUnsubscribe_successHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/html/unsubscribe_success.html", size: 386, mode: os.FileMode(420), modTime: time.Unix(1569271292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/html/common_footer.html":          templatesHtmlCommon_footerHtml,
	"templates/html/common_header.html":          templatesHtmlCommon_headerHtml,
	"templates/html/confirm.html":                templatesHtmlConfirmHtml,
	"templates/html/confirm_action.html":         templatesHtmlConfirm_actionHtml,
	"templates/html/confirm_email.html":          templatesHtmlConfirm_emailHtml,
	"templates/html/confirm_success.html":        templatesHtmlConfirm_successHtml,
	"templates/html/crumb_error.html":            templatesHtmlCrumb_errorHtml,
	"templates/html/index.html":                  templatesHtmlIndexHtml,
	"templates/html/invite_accept.html":          templatesHtmlInvite_acceptHtml,
	"templates/html/invite_code.html":            templatesHtmlInvite_codeHtml,
	"templates/html/invite_how_it_works.html":    templatesHtmlInvite_how_it_worksHtml,
	"templates/html/invite_request.html":         templatesHtmlInvite_requestHtml,
	"templates/html/invite_request_email.html":   templatesHtmlInvite_request_emailHtml,
	"templates/html/invite_request_success.html": templatesHtmlInvite_request_successHtml,
	"templates/html/subscribe.html":              templatesHtmlSubscribeHtml,
	"templates/html/subscribe_success.html":      templatesHtmlSubscribe_successHtml,
	"templates/html/unsubscribe.html":            templatesHtmlUnsubscribeHtml,
	"templates/html/unsubscribe_success.html":    templatesHtmlUnsubscribe_successHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"html": &bintree{nil, map[string]*bintree{
			"common_footer.html":          &bintree{templatesHtmlCommon_footerHtml, map[string]*bintree{}},
			"common_header.html":          &bintree{templatesHtmlCommon_headerHtml, map[string]*bintree{}},
			"confirm.html":                &bintree{templatesHtmlConfirmHtml, map[string]*bintree{}},
			"confirm_action.html":         &bintree{templatesHtmlConfirm_actionHtml, map[string]*bintree{}},
			"confirm_email.html":          &bintree{templatesHtmlConfirm_emailHtml, map[string]*bintree{}},
			"confirm_success.html":        &bintree{templatesHtmlConfirm_successHtml, map[string]*bintree{}},
			"crumb_error.html":            &bintree{templatesHtmlCrumb_errorHtml, map[string]*bintree{}},
			"index.html":                  &bintree{templatesHtmlIndexHtml, map[string]*bintree{}},
			"invite_accept.html":          &bintree{templatesHtmlInvite_acceptHtml, map[string]*bintree{}},
			"invite_code.html":            &bintree{templatesHtmlInvite_codeHtml, map[string]*bintree{}},
			"invite_how_it_works.html":    &bintree{templatesHtmlInvite_how_it_worksHtml, map[string]*bintree{}},
			"invite_request.html":         &bintree{templatesHtmlInvite_requestHtml, map[string]*bintree{}},
			"invite_request_email.html":   &bintree{templatesHtmlInvite_request_emailHtml, map[string]*bintree{}},
			"invite_request_success.html": &bintree{templatesHtmlInvite_request_successHtml, map[string]*bintree{}},
			"subscribe.html":              &bintree{templatesHtmlSubscribeHtml, map[string]*bintree{}},
			"subscribe_success.html":      &bintree{templatesHtmlSubscribe_successHtml, map[string]*bintree{}},
			"unsubscribe.html":            &bintree{templatesHtmlUnsubscribeHtml, map[string]*bintree{}},
			"unsubscribe_success.html":    &bintree{templatesHtmlUnsubscribe_successHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
